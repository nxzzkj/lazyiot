<?xml version="1.0" encoding="utf-8" ?>
<CodeDoc>
	<Delegate name="DeserializeDockContent">
		<summary>
			Callback used by <see cref="WeifenLuo.WinFormsUI.DockPanel.LoadFromXml"/>
			to get a instance of <see cref="WeifenLuo.WinFormsUI.DockContent"/> from a
			serialized string.
		</summary>
		<param name="persistString">
			The serialized string of the <see cref="WeifenLuo.WinFormsUI.DockContent"/> object.
		</param>
		<returns>
			The <see cref="WeifenLuo.WinFormsUI.DockContent"/> object.
		</returns>
		<remarks>
			<para>
				The layout of <see cref="WeifenLuo.WinFormsUI.DockPanel"/>
				can be saved to and loaded from XML data by calling
				<see cref="WeifenLuo.WinFormsUI.DockPanel.SaveAsXml"/> and
				<see cref="WeifenLuo.WinFormsUI.DockPanel.LoadFromXml"/>.
				When saving, the system will persist the <see cref="WeifenLuo.WinFormsUI.DockContent"/>
				object to a string by calling its 
				<see cref="WeifenLuo.WinFormsUI.DockContent.GetPersistString"/> method;
				when loading, the system will call the <see cref="WeifenLuo.WinFormsUI.DeserializeDockContent"/>
				call back to get the instance of <see cref="WeifenLuo.WinFormsUI.DockContent"/> object.
			</para>
			<para>
				The default implementation of <see cref="WeifenLuo.WinFormsUI.DockContent.GetPersistString"/>
				returns the type name of the <see cref="WeifenLuo.WinFormsUI.DockContent"/> class. You can overwrite
				this method for your own implementation.
			</para>
			<para>
				You always need to provide a <see cref="WeifenLuo.WinFormsUI.DeserializeDockContent"/>
				callback when loading the layout.
			</para>
		</remarks>
	</Delegate>
	<Delegate name="DockContentEventHandler">
		<summary>Represents the method that will handle the <see cref="WeifenLuo.WinFormsUI.DockPanel.ContentAdded"/> or
		<see cref="WeifenLuo.WinFormsUI.DockPanel.ContentRemoved"/> event of <see cref="WeifenLuo.WinFormsUI.DockPanel" />.</summary>
		<param name="sender">The source of the event.</param>
		<param name="e">A <see cref="WeifenLuo.WinFormsUI.DockContentEventArgs" /> that contains the event data.</param>
	</Delegate>
	<Class name="DockPanel">
		<ClassDef>
			<summary>Represents a control that acts as container for the docking windows.</summary>
			<remarks>The <see cref="WeifenLuo.WinFormsUI.DockPanel"/> contains 5 <see cref="WeifenLuo.WinFormsUI.DockWindow"/>: 
			top, bottom, left, right and document. It also displays tab strip for auto-hide window(s) if there is any.</remarks>
		</ClassDef>
		<Constructor name="()">
			<summary>Initializes a new instance of <see cref="WeifenLuo.WinFormsUI.DockPanel"/> class.</summary>
		</Constructor>
		<Property name="ActiveAutoHideContent">
			<summary>Gets or sets the active auto-hide <see cref="WeifenLuo.WinFormsUI.DockContent"/>.</summary>
			<value>The auto-hide <see cref="WeifenLuo.WinFormsUI.DockContent"/> is currently active.</value>
		</Property>
		<Property name="ActiveContent">
			<summary>Gets the active <see cref="WeifenLuo.WinFormsUI.DockContent"/>.</summary>
			<value>The <see cref="WeifenLuo.WinFormsUI.DockContent"/> is currently active.</value>
		</Property>
		<Property name="ActiveDocument">
			<summary>Gets the active document <see cref="WeifenLuo.WinFormsUI.DockContent"/>.</summary>
			<value>The document <see cref="WeifenLuo.WinFormsUI.DockContent"/> is currently active.</value>
		</Property>
		<Property name="ActiveDocumentPane">
			<summary>Gets the active document <see cref="WeifenLuo.WinFormsUI.DockPane"/>.</summary>
			<value>The document <see cref="WeifenLuo.WinFormsUI.DockPane"/> is currently active.</value>
		</Property>
		<Property name="ActivePane">
			<summary>Gets the active <see cref="WeifenLuo.WinFormsUI.DockPane"/>.</summary>
			<value>The <see cref="WeifenLuo.WinFormsUI.DockPane"/> is currently active.</value>
		</Property>
		<Property name="AllowRedocking">
			<summary>Sets or gets a value indicating whether drag and drop redocking is allowed.</summary>
			<value><b>True</b>, if drag and drop redocking is allowed, otherwise, <b>false</b>.</value>
		</Property>
		<Property name="Contents">
			<summary>Gets the collection of contained <see cref="WeifenLuo.WinFormsUI.DockContent" /> forms.</summary>
			<value>The <see cref="WeifenLuo.WinFormsUI.DockContentCollection" /> which contains all the
			<see cref="WeifenLuo.WinFormsUI.DockContent" /> forms for this <see cref="WeifenLuo.WinFormsUI.DockPanel" />.</value>
			<remarks>A <see cref="WeifenLuo.WinFormsUI.DockContent" /> object is added to <see cref="WeifenLuo.WinFormsUI.DockPanel.Contents" />
			collection by setting the value of its <see cref="WeifenLuo.WinFormsUI.DockContent.DockPanel" /> property.</remarks>
		</Property>
		<Property name="DockBottomPortion">
			<summary>Gets or sets the size of the bottom side <see cref="WeifenLuo.WinFormsUI.DockWindow"/>.</summary>
			<value>A value between 0 and 1 to determine the size of the bottom side <see cref="WeifenLuo.WinFormsUI.DockWindow"/>.</value>
		</Property>
		<Property name="DockLeftPortion">
			<summary>Gets or sets the size of the left side <see cref="WeifenLuo.WinFormsUI.DockWindow"/>.</summary>
			<value>A value between 0 and 1 to determine the size of the left side <see cref="WeifenLuo.WinFormsUI.DockWindow"/>.</value>
		</Property>
		<Property name="DockRightPortion">
			<summary>Gets or sets the size of the right side <see cref="WeifenLuo.WinFormsUI.DockWindow"/>.</summary>
			<value>A value between 0 and 1 to determine the size of the right side <see cref="WeifenLuo.WinFormsUI.DockWindow"/>.</value>
		</Property>
		<Property name="DockTopPortion">
			<summary>Gets or sets the size of the top side <see cref="WeifenLuo.WinFormsUI.DockWindow"/>.</summary>
			<value>A value between 0 and 1 to determine the size of the top side <see cref="WeifenLuo.WinFormsUI.DockWindow"/>.</value>
		</Property>
		<Property name="DockWindows">
			<summary>Gets the collection of contained <see cref="WeifenLuo.WinFormsUI.DockWindow" /> controls.</summary>
			<value>The <see cref="WeifenLuo.WinFormsUI.DockWindowCollection" /> which contains all the
			<see cref="WeifenLuo.WinFormsUI.DockWindow" /> controls for this <see cref="WeifenLuo.WinFormsUI.DockPanel" />.</value>
		</Property>
		<Property name="Extender">
			<summary>Gets the <see cref="DockPanelExtender"/> to customize the <see cref="DockPanel"/>.</summary>
			<value>A <see cref="DockPanelExtender"/> to customize the <see cref="DockPanel"/>.</value>
		</Property>
		<Property name="FloatWindows">
			<summary>Gets the collection of contained <see cref="WeifenLuo.WinFormsUI.FloatWindow" /> forms.</summary>
			<value>The <see cref="WeifenLuo.WinFormsUI.FloatWindowCollection" /> which contains all the
			<see cref="WeifenLuo.WinFormsUI.FloatWindow" /> forms for this <see cref="WeifenLuo.WinFormsUI.DockPanel" />.</value>
		</Property>
		<Property name="Panes">
			<summary>Gets the collection of contained <see cref="WeifenLuo.WinFormsUI.DockPane" /> windows.</summary>
			<value>The <see cref="WeifenLuo.WinFormsUI.DockPaneCollection" /> which contains all the
			<see cref="WeifenLuo.WinFormsUI.DockPane" /> windows for this <see cref="WeifenLuo.WinFormsUI.DockPanel" />.</value>
		</Property>
		<Property name="Documents">
			<summary>Gets the document <see cref="WeifenLuo.WinFormsUI.DockContent"/> forms.</summary>
			<value>An array of the document <see cref="WeifenLuo.WinFormsUI.DockContent"/> forms.</value>
		</Property>
		<Property name="MdiIntegration">
			<summary>Gets or sets a value indicating whether all the document <see cref="WeifenLuo.WinFormsUI.DockContent"/> forms are treated as MDI forms.</summary>
			<value><b>True</b>, if all the document <see cref="WeifenLuo.WinFormsUI.DockContent"/> forms are treated as MDI forms, otherwise, <b>false</b>.</value>
		</Property>
		<Property name="SdiDocument">
			<summary>Gets or sets a value indicating whether the tab strip of document <see cref="WeifenLuo.WinFormsUI.DockPane"/> will be displayed when there is only one document <see cref="WeifenLuo.WinFormsUI.DockContent"/> form.</summary>
			<value><b>False</b>, if the tab strip of document <see cref="WeifenLuo.WinFormsUI.DockPane"/> will be displayed when there is only one document <see cref="WeifenLuo.WinFormsUI.DockContent"/> form, otherwise, <b>true</b>.</value>
		</Property>
		<Method name="OnActiveContentChanged(EventArgs)">
			<summary>Raises the <see cref="WeifenLuo.WinFormsUI.DockPanel.ActiveContentChanged" /> event.</summary>
			<param name="e">An <see cref="System.EventArgs" /> that contains the event data.</param>
		</Method>
		<Method name="OnActiveDocumentChanged(EventArgs)">
			<summary>Raises the <see cref="WeifenLuo.WinFormsUI.DockPanel.ActiveDocumentChanged" /> event.</summary>
			<param name="e">An <see cref="System.EventArgs" /> that contains the event data.</param>
		</Method>
		<Method name="OnActivePaneChanged(EventArgs)">
			<summary>Raises the <see cref="WeifenLuo.WinFormsUI.DockPanel.ActivePaneChanged" /> event.</summary>
			<param name="e">An <see cref="System.EventArgs" /> that contains the event data.</param>
		</Method>
		<Method name="OnContentAdded(DockContentEventArgs)">
			<summary>Raises the <see cref="WeifenLuo.WinFormsUI.DockPanel.ContentAdded" /> event.</summary>
			<param name="e">An <see cref="WeifenLuo.WinFormsUI.DockContentEventArgs" /> that contains the event data.</param>
		</Method>
		<Method name="OnContentRemoved(DockContentEventArgs)">
			<summary>Raises the <see cref="WeifenLuo.WinFormsUI.DockPanel.ContentRemoved" /> event.</summary>
			<param name="e">An <see cref="WeifenLuo.WinFormsUI.DockContentEventArgs" /> that contains the event data.</param>
		</Method>
		<Method name="SaveAsXml">
			<overloads>
				<summary>Save the layout to XML data. Overloaded.</summary>
				<remarks>
					<include file='DockPanel.xml' path='//CodeDoc/Delegate[@name="DeserializeDockContent"]/remarks/*'/>
				</remarks>
			</overloads>
		</Method>
		<Method name="SaveAsXml(string)">
			<summary>Save the layout to XML data, using the specified file.</summary>
			<param name="filename">The file name to write to. If the file exsists, it will truncate it and
			overwrite it with new content.</param>
			<remarks>
				<include file='DockPanel.xml' path='//CodeDoc/Delegate[@name="DeserializeDockContent"]/remarks/*'/>
			</remarks>
		</Method>
		<Method name="SaveAsXml(string, Encoding)">
			<summary>Save the layout to XML data, using the specified file and encoding.</summary>
			<param name="filename">The file name to write to. If the file exsists, it will truncate it and
			overwrite it with new content.</param>
			<param name="encoding">The encoding to generate.</param>
			<remarks>
				<include file='DockPanel.xml' path='//CodeDoc/Delegate[@name="DeserializeDockContent"]/remarks/*'/>
			</remarks>
		</Method>
		<Method name="SaveAsXml(Stream, Encoding)">
			<summary>Save the layout to XML data, using the specified stream and encoding.</summary>
			<param name="stream">The stream to which you want to write.</param>
			<param name="encoding">The encoding to generate.</param>
			<remarks>
				<include file='DockPanel.xml' path='//CodeDoc/Delegate[@name="DeserializeDockContent"]/remarks/*'/>
			</remarks>
		</Method>
		<Method name="LoadFromXml">
			<overloads>
				<summary>Load the layout from XML data. Overloaded</summary>
				<remarks>
					<include file='DockPanel.xml' path='//CodeDoc/Delegate[@name="DeserializeDockContent"]/remarks/*'/>
				</remarks>
			</overloads>
		</Method>
		<Method name="LoadFromXml(string, DeserializeDockContent)">
			<summary>Load the layout from XML file.</summary>
			<param name="filename">The file name to read XML data from.</param>
			<param name="deserializeContent">The callback function to get the
			<see cref="WeifenLuo.WinFormsUI.DockContent"/> instance from the persistent string.</param>
			<remarks>
				<include file='DockPanel.xml' path='//CodeDoc/Delegate[@name="DeserializeDockContent"]/remarks/*'/>
			</remarks>
		</Method>
		<Method name="LoadFromXml(Stream, DeserializeDockContent)">
			<summary>Load the layout from XML stream.</summary>
			<param name="stream">The stream to read XML data from.</param>
			<param name="deserializeContent">The callback function to get the
			<see cref="WeifenLuo.WinFormsUI.DockContent"/> instance from the persistent string.</param>
			<remarks>
				<include file='DockPanel.xml' path='//CodeDoc/Delegate[@name="DeserializeDockContent"]/remarks/*'/>
			</remarks>
		</Method>
		<Method name="SetPaneIndex(DockPane, int)">
			<summary>Moves the specified <see cref="WeifenLuo.WinFormsUI.DockPane" /> window to the
			specified position in the auto-hide tab strip.</summary>
			<param name="pane">The specified <see cref="WeifenLuo.WinFormsUI.DockPane" /> window.</param>
			<param name="index">The zero-based index represents the new position in the auto-hide tab strip.</param>
		</Method>
		<Event name="ActiveContentChanged">
			<summary>Occurs when the <see cref="WeifenLuo.WinFormsUI.DockPanel.ActiveContent"/> property changed.</summary>
		</Event>
		<Event name="ActiveDocumentChanged">
			<summary>Occurs when the <see cref="WeifenLuo.WinFormsUI.DockPanel.ActiveDocument"/> property changed.</summary>
		</Event>
		<Event name="ActivePaneChanged">
			<summary>Occurs when the <see cref="WeifenLuo.WinFormsUI.DockPanel.ActivePane"/> property changed.</summary>
		</Event>
		<Event name="ContentAdded">
			<summary>Occurs when a <see cref="WeifenLuo.WinFormsUI.DockContent"/> form added to <see cref="WeifenLuo.WinFormsUI.DockPanel.Contents"/> collection.</summary>
		</Event>
		<Event name="ContentRemoved">
			<summary>Occurs when a <see cref="WeifenLuo.WinFormsUI.DockContent"/> form removed from <see cref="WeifenLuo.WinFormsUI.DockPanel.Contents"/> collection.</summary>
		</Event>
	</Class>
</CodeDoc>