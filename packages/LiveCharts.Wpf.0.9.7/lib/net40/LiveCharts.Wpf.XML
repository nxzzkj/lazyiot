<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LiveCharts.Wpf</name>
    </assembly>
    <members>
        <member name="T:LiveCharts.Wpf.AngularGauge">
            <summary>
            The gauge chart is useful to display progress or completion.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.AngularGauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveCharts.Wpf.AngularGauge"/> class.
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularGauge.WedgeProperty">
            <summary>
            The wedge property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularGauge.TicksStepProperty">
            <summary>
            The ticks step property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularGauge.LabelsStepProperty">
            <summary>
            The labels step property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularGauge.FromValueProperty">
            <summary>
            From value property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularGauge.ToValueProperty">
            <summary>
            To value property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularGauge.SectionsProperty">
            <summary>
            The sections property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularGauge.ValueProperty">
            <summary>
            The value property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularGauge.LabelFormatterProperty">
            <summary>
            The label formatter property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularGauge.DisableaAnimationsProperty">
            <summary>
            The disablea animations property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularGauge.AnimationsSpeedProperty">
            <summary>
            The animations speed property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularGauge.TicksForegroundProperty">
            <summary>
            The ticks foreground property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularGauge.SectionsInnerRadiusProperty">
            <summary>
            The sections inner radius property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularGauge.NeedleFillProperty">
            <summary>
            The needle fill property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularGauge.LabelsEffectProperty">
            <summary>
            The labels effect property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularGauge.TicksStrokeThicknessProperty">
            <summary>
            The ticks stroke thickness property
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AngularGauge.Wedge">
            <summary>
            Gets or sets the opening angle in the gauge
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AngularGauge.TicksStep">
            <summary>
            Gets or sets the separation between every tick
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AngularGauge.LabelsStep">
            <summary>
            Gets or sets the separation between every label
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AngularGauge.FromValue">
            <summary>
            Gets or sets the minimum value of the gauge
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AngularGauge.ToValue">
            <summary>
            Gets or sets the maximum value of the gauge
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AngularGauge.Sections">
            <summary>
            Gets or sets a collection of sections
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AngularGauge.Value">
            <summary>
            Gets or sets the current gauge value
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AngularGauge.LabelFormatter">
            <summary>
            Gets or sets the label formatter
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AngularGauge.DisableaAnimations">
            <summary>
            Gets or sets whether the chart is animated
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AngularGauge.AnimationsSpeed">
            <summary>
            Gets or sets the animations speed
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AngularGauge.TicksForeground">
            <summary>
            Gets or sets the ticks foreground
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AngularGauge.SectionsInnerRadius">
            <summary>
            Gets or sets the inner radius of all the sections in the chart, the unit of this property is percentage, goes from 0 to 1
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AngularGauge.NeedleFill">
            <summary>
            Gets o sets the needle fill
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AngularGauge.LabelsEffect">
            <summary>
            Gets or sets the labels effect.
            </summary>
            <value>
            The labels effect.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.AngularGauge.TicksStrokeThickness">
            <summary>
            Gets or sets the ticks stroke thickness.
            </summary>
            <value>
            The ticks stroke thickness.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.AngularSection">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.FrameworkElement"/>
        </member>
        <member name="F:LiveCharts.Wpf.AngularSection.FromValueProperty">
            <summary>
            From value property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularSection.ToValueProperty">
            <summary>
            To value property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AngularSection.FillProperty">
            <summary>
            The fill property
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AngularSection.FromValue">
            <summary>
            Gets or sets from value.
            </summary>
            <value>
            From value.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.AngularSection.ToValue">
            <summary>
            Gets or sets to value.
            </summary>
            <value>
            To value.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.AngularSection.Fill">
            <summary>
            Gets or sets the fill.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.AxisWindowCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.ColorsCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.Components.DefaultXamlReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Components.DefaultXamlReader.DataLabelTemplate">
            <summary>
            Creates the specified type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:LiveCharts.Wpf.Components.IFondeable">
            <summary>
            
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Components.IFondeable.PointForeground">
            <summary>
            Gets the point foreground.
            </summary>
            <value>
            The point foreground.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.DateAxis">
            <summary>
            
            </summary>
            <seealso cref="T:LiveCharts.Wpf.WindowAxis"/>
            <seealso cref="T:LiveCharts.Definitions.Charts.IDateAxisView"/>
        </member>
        <member name="T:LiveCharts.Wpf.WindowAxis">
            <summary>
            
            </summary>
            <seealso cref="T:LiveCharts.Wpf.Axis"/>
            <seealso cref="T:LiveCharts.Definitions.Charts.IWindowAxisView"/>
        </member>
        <member name="T:LiveCharts.Wpf.Axis">
            <summary>
            An Axis of a chart
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Axis.#ctor">
            <summary>
            Initializes a new instance of Axis class
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.RangeChangedCommandProperty">
            <summary>
            The range changed command property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.PreviewRangeChangedCommandProperty">
            <summary>
            The preview range changed command property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.LabelsProperty">
            <summary>
            The labels property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.SectionsProperty">
            <summary>
            The sections property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.LabelFormatterProperty">
            <summary>
            The label formatter property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.SeparatorProperty">
            <summary>
            The separator property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.ShowLabelsProperty">
            <summary>
            The show labels property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.MaxValueProperty">
            <summary>
            The maximum value property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.MinValueProperty">
            <summary>
            The minimum value property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.MaxRangeProperty">
            <summary>
            The maximum range property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.MinRangeProperty">
            <summary>
            The minimum range property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.TitleProperty">
            <summary>
            The title property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.PositionProperty">
            <summary>
            The position property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.IsMergedProperty">
            <summary>
            The is merged property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.DisableAnimationsProperty">
            <summary>
            The disable animations property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.FontFamilyProperty">
            <summary>
            The font family property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.FontSizeProperty">
            <summary>
            The font size property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.FontWeightProperty">
            <summary>
            The font weight property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.FontStyleProperty">
            <summary>
            The font style property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.FontStretchProperty">
            <summary>
            The font stretch property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.ForegroundProperty">
            <summary>
            The foreground property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.LabelsRotationProperty">
            <summary>
            The labels rotation property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.BarUnitProperty">
            <summary>
            The bar unit property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.UnitProperty">
            <summary>
            The unit property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Axis.AxisOrientationProperty">
            <summary>
            The axis orientation property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Axis.Clean">
            <summary>
             Cleans this instance.
             </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Axis.RenderSeparator(LiveCharts.SeparatorElementCore,LiveCharts.Charts.ChartCore)">
            <summary>
            Renders the separator.
            </summary>
            <param name="model">The model.</param>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Axis.UpdateTitle(LiveCharts.Charts.ChartCore,System.Double)">
            <summary>
            Updates the title.
            </summary>
            <param name="chart">The chart.</param>
            <param name="rotationAngle">The rotation angle.</param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.Axis.SetTitleTop(System.Double)">
            <summary>
            Sets the title top.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Axis.SetTitleLeft(System.Double)">
            <summary>
            Sets the title left.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Axis.GetTitleLeft">
            <summary>
            Gets the title left.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.Axis.GetTileTop">
            <summary>
            Gets the tile top.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.Axis.GetLabelSize">
            <summary>
            Gets the size of the label.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.Axis.AsCoreElement(LiveCharts.Charts.ChartCore,LiveCharts.AxisOrientation)">
            <summary>
            Ases the core element.
            </summary>
            <param name="chart">The chart.</param>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.Axis.SetRange(System.Double,System.Double)">
            <summary>
            Sets the range.
            </summary>
            <param name="min">The minimum.</param>
            <param name="max">The maximum.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Axis.UpdateChart(System.Boolean,System.Boolean)">
            <summary>
            Updates the chart.
            </summary>
            <param name="animate">if set to <c>true</c> [animate].</param>
            <param name="updateNow">if set to <c>true</c> [update now].</param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.Axis.OnRangeChanged(LiveCharts.Events.RangeChangedEventArgs)">
            <summary>
            Raises the <see cref="E:RangeChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:LiveCharts.Events.RangeChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Axis.OnPreviewRangeChanged(LiveCharts.Events.PreviewRangeChangedEventArgs)">
            <summary>
            Raises the <see cref="E:PreviewRangeChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:LiveCharts.Events.PreviewRangeChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:LiveCharts.Wpf.Axis.RangeChanged">
            <summary>
            Occurs when an axis range changes by an user action (zooming or panning)
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.RangeChangedCommand">
            <summary>
            Gets or sets the command to execute when an axis range changes by an user action (zooming or panning)
            </summary>
            <value>
            The range changed command.
            </value>
        </member>
        <member name="E:LiveCharts.Wpf.Axis.PreviewRangeChanged">
            <summary>
            Occurs before an axis range changes by an user action (zooming or panning)
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.PreviewRangeChangedCommand">
            <summary>
            Gets or sets the command to execute before an axis range changes by an user action (zooming or panning)
            </summary>
            <value>
            The preview range changed command.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.Model">
            <summary>
            Gets the Model of the axis, the model is used a DTO to communicate with the core of the library.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.PreviousMinValue">
            <summary>
            Gets previous Min Value
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.PreviousMaxValue">
            <summary>
            Gets previous Max Value
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.Labels">
            <summary>
            Gets or sets axis labels, labels property stores the array to map for each index and value, for example if axis value is 0 then label will be labels[0], when value 1 then labels[1], value 2 then labels[2], ..., value n labels[n], use this property instead of a formatter when there is no conversion between value and label for example names, if you are plotting sales vs salesman name.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.Sections">
            <summary>
            Gets or sets the axis sectionsCollection, a section is useful to highlight ranges or values in a chart.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.LabelFormatter">
            <summary>
            Gets or sets the function to convert a value to label, for example when you need to display your chart as currency ($1.00) or as degrees (10°), if Labels property is not null then formatter is ignored, and label will be pulled from Labels prop.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.Separator">
            <summary>
            Get or sets configuration for parallel lines to axis.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.ShowLabels">
            <summary>
            Gets or sets if labels are shown in the axis.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.MaxValue">
            <summary>
            Gets or sets axis max value, set it to double.NaN to make this property Auto, default value is double.NaN
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.MinValue">
            <summary>
            Gets or sets axis min value, set it to double.NaN to make this property Auto, default value is double.NaN
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.ActualMinValue">
            <summary>
            Gets the actual minimum value.
            </summary>
            <value>
            The actual minimum value.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.ActualMaxValue">
            <summary>
            Gets the actual maximum value.
            </summary>
            <value>
            The actual maximum value.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.MaxRange">
            <summary>
            Gets or sets the max range this axis can display, useful to limit user zooming.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.MinRange">
            <summary>
            Gets or sets the min range this axis can display, useful to limit user zooming.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.Title">
            <summary>
            Gets or sets axis title, the title will be displayed only if this property is not null, default is null.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.Position">
            <summary>
            Gets or sets the axis position, default is Axis.Position.LeftBottom, when the axis is at Y and Position is LeftBottom, then axis will be placed at left, RightTop position will place it at Right, when the axis is at X and position LeftBottom, the axis will be placed at bottom, if position is RightTop then it will be placed at top.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.IsMerged">
            <summary>
            Gets or sets if the axis labels should me placed inside the chart, this is useful to save some space.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.DisableAnimations">
            <summary>
            Gets or sets if the axis is animated.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.FontFamily">
            <summary>
            Gets or sets labels font family, font to use for any label in this axis
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.FontSize">
            <summary>
            Gets or sets labels font size
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.FontWeight">
            <summary>
            Gets or sets labels font weight
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.FontStyle">
            <summary>
            Gets or sets labels font style
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.FontStretch">
            <summary>
            Gets or sets labels font stretch
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.Foreground">
            <summary>
            Gets or sets labels text color.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.LabelsRotation">
            <summary>
            Gets or sets the labels rotation in the axis, the angle starts as a horizontal line, you can use any angle in degrees, even negatives.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.BarUnit">
            <summary>
            Gets or sets the bar's series unit width (rows and columns), this property specifies the value in the chart that any bar should take as width.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.Unit">
            <summary>
            Gets or sets the axis unit, setting this property to your actual scale unit (seconds, minutes or any other scale) helps you to fix possible visual issues.
            </summary>
            <value>
            The unit.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Axis.AxisOrientation">
            <summary>
            Gets or sets the element orientation ind the axis
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.WindowAxis.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.WindowAxis.Windows">
            <summary>
            
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.WindowAxis.SelectedWindow">
            <summary>
            
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.WindowAxis.HeaderFontWeight">
            <summary>
            Gets or sets labels font weight
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.WindowAxis.HeaderForeground">
            <summary>
            Gets or sets labels text color.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.DateAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveCharts.Wpf.DateAxis"/> class.
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.DateAxis.InitialDateTimeProperty">
            <summary>
            The initial date time property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.DateAxis.PeriodProperty">
            <summary>
            The period property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.DateAxis.AsCoreElement(LiveCharts.Charts.ChartCore,LiveCharts.AxisOrientation)">
            <summary>
            Maps as core element.
            </summary>
            <param name="chart">The chart.</param>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="P:LiveCharts.Wpf.DateAxis.InitialDateTime">
            <summary>
            Gets or sets the Initial Date Time.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DateAxis.Period">
            <summary>
            Gets or sets the period that represents every unit in the axis.
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.FinancialColoringRule">
            <summary>
            Defines a condition that decides the fill and stroke to use in a CandleStick series
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.FinancialColoringRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveCharts.Wpf.FinancialColoringRule"/> class.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.FinancialColoringRule.#ctor(LiveCharts.FinancialDelegate,System.Windows.Media.Brush,System.Windows.Media.Brush)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveCharts.Wpf.FinancialColoringRule"/> class.
            </summary>
            <param name="condition">The condition.</param>
            <param name="stroke">The stroke.</param>
            <param name="fill">The fill.</param>
        </member>
        <member name="P:LiveCharts.Wpf.FinancialColoringRule.Condition">
            <summary>
            Gets or sets the condition, if the condition returns true, the point will use the defined Stroke/Fill properties in the FinancialColoringRule object
            </summary>
            <value>
            The condition.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.FinancialColoringRule.Stroke">
            <summary>
            Gets or sets the stroke to use when the condition returns true.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.FinancialColoringRule.Fill">
            <summary>
            Gets or sets the fill to use when the condition returns true.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.IChartLegend">
            <summary>
            
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged"/>
        </member>
        <member name="P:LiveCharts.Wpf.IChartLegend.Series">
            <summary>
            Gets or sets the series.
            </summary>
            <value>
            The series.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.IChartTooltip">
            <summary>
            
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged"/>
        </member>
        <member name="P:LiveCharts.Wpf.IChartTooltip.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.IChartTooltip.SelectionMode">
            <summary>
            Gets or sets the selection mode.
            </summary>
            <value>
            The selection mode.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.LogarithmicAxis">
            <summary>
            An Logarithmic Axis of a chart
            </summary>
            <seealso cref="T:LiveCharts.Wpf.Axis"/>
        </member>
        <member name="M:LiveCharts.Wpf.LogarithmicAxis.AsCoreElement(LiveCharts.Charts.ChartCore,LiveCharts.AxisOrientation)">
            <summary>
            Ases the core element.
            </summary>
            <param name="chart">The chart.</param>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="F:LiveCharts.Wpf.LogarithmicAxis.BaseProperty">
            <summary>
            The base property
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.LogarithmicAxis.Base">
            <summary>
            Gets or sets the base.
            </summary>
            <value>
            The base.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.ScatterSeries">
            <summary>
            The Bubble series, draws scatter series, only using X and Y properties or bubble series, if you also use the weight property, this series should be used in a cartesian chart.
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.Series">
            <summary>
            Base WPF and WinForms series, this class is abstract
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Series.#ctor">
            <summary>
            Initializes a new Instance of Series
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Series.#ctor(System.Object)">
            <summary>
            Initializes a new Instance of series, with a given configuration
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="F:LiveCharts.Wpf.Series.ValuesProperty">
            <summary>
            The values property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.TitleProperty">
            <summary>
            The title property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.StrokeProperty">
            <summary>
            The stroke property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.StrokeThicknessProperty">
            <summary>
            The stroke thickness property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.FillProperty">
            <summary>
            The fill property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.DataLabelsProperty">
            <summary>
            The data labels property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.DataLabelsTemplateProperty">
            <summary>
            The labels template property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.FontFamilyProperty">
            <summary>
            The font family property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.FontSizeProperty">
            <summary>
            The font size property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.FontWeightProperty">
            <summary>
            The font weight property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.FontStyleProperty">
            <summary>
            The font style property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.FontStretchProperty">
            <summary>
            The font stretch property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.ForegroundProperty">
            <summary>
            The foreground property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.StrokeDashArrayProperty">
            <summary>
            The stroke dash array property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.PointGeometryProperty">
            <summary>
            The point geometry property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.ScalesXAtProperty">
            <summary>
            The scales x at property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.ScalesYAtProperty">
            <summary>
            The scales y at property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.LabelPointProperty">
            <summary>
            The label point property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Series.ConfigurationProperty">
            <summary>
            The configuration property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Series.GetPointView(LiveCharts.ChartPoint,System.String)">
            <summary>
            Gets the view of a given point
            </summary>
            <param name="point"></param>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.Series.OnSeriesUpdateStart">
            <summary>
            This method runs when the update starts
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Series.Erase(System.Boolean)">
            <summary>
            Erases series
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Series.OnSeriesUpdatedFinish">
            <summary>
            This method runs when the update finishes
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Series.InitializeColors">
            <summary>
            Initializes the series colors if they are not set
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Series.DrawSpecializedElements">
            <summary>
            Defines special elements to draw according to the series type
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Series.PlaceSpecializedElements">
            <summary>
            Places specializes items
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Series.GetLabelPointFormatter">
            <summary>
            Gets the label point formatter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.Series.CallChartUpdater(System.Boolean)">
            <summary>
            Calls the chart updater.
            </summary>
            <param name="animate">if set to <c>true</c> [animate].</param>
            <returns></returns>
        </member>
        <member name="P:LiveCharts.Wpf.Series.IsFirstDraw">
            <summary>
            Gets a value indicating whether this instance is first draw.
            </summary>
            <value>
            <c>true</c> if this instance is first draw; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Series.Model">
            <summary>
            THe Model is set by every series type, it is the motor of the series, it is the communication with the core of the library
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.ActualValues">
            <summary>
            Gets the Actual values in the series, active or visible series only
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.IsSeriesVisible">
            <summary>
            Gets whether the series is visible
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.ChartPoints">
            <summary>
            Gets the current chart points in the series
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.Values">
            <summary>
            Gets or sets chart values.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.Title">
            <summary>
            Gets or sets series title
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.Stroke">
            <summary>
            Gets or sets series stroke, if this property is null then a SolidColorBrush will be assigned according to series position in collection and Chart.Colors property
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.StrokeThickness">
            <summary>
            Gets or sets the series stroke thickness.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.Fill">
            <summary>
            Gets or sets series fill color, if this property is null then a SolidColorBrush will be assigned according to series position in collection and Chart.Colors property, also Fill property has a default opacity according to chart type.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.DataLabels">
            <summary>
            Gets or sets if series should include a label over each data point.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.DataLabelsTemplate">
            <summary>
            Gets or sets the labels template.
            </summary>
            <value>
            The labels template.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Series.FontFamily">
            <summary>
            Gets or sets labels font family
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.FontSize">
            <summary>
            Gets or sets labels font size
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.FontWeight">
            <summary>
            Gets or sets labels font weight
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.FontStyle">
            <summary>
            Gets or sets labels font style
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.FontStretch">
            <summary>
            Gets or sets labels font stretch
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.Foreground">
            <summary>
            Gets or sets labels text color.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array of a series, sue this property to draw dashed strokes
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.PointGeometry">
            <summary>
            Gets or sets the point geometry, this shape will be drawn in the Tooltip, Legend, and if line series in every point also.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.ScalesXAt">
            <summary>
            Gets or sets the axis where series is scaled at, the axis must exist in the collection
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.ScalesYAt">
            <summary>
            Gets or sets the axis where series is scaled at, the axis must exist in the collection
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.LabelPoint">
            <summary>
            Gets or sets the label formatter for the data label and tooltip, this property is set by default according to the series
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Series.Configuration">
            <summary>
            Gets or sets series mapper, if this property is set then the library will ignore the SeriesCollection mapper and global mappers.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.ScatterSeries.#ctor">
            <summary>
            Initializes a new instance of BubbleSeries class
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.ScatterSeries.#ctor(System.Object)">
            <summary>
            Initializes a new instance of BubbleSeries class using a given mapper
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="F:LiveCharts.Wpf.ScatterSeries.MaxPointShapeDiameterProperty">
            <summary>
            The maximum point shape diameter property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.ScatterSeries.MinPointShapeDiameterProperty">
            <summary>
            The minimum point shape diameter property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.ScatterSeries.GetPointDiameter">
            <summary>
            Gets the point diameter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.ScatterSeries.GetPointView(LiveCharts.ChartPoint,System.String)">
            <summary>
            Gets the view of a given point
            </summary>
            <param name="point"></param>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="P:LiveCharts.Wpf.ScatterSeries.MaxPointShapeDiameter">
            <summary>
            Gets or sets the max shape diameter, the points using the max weight in the series will have this radius.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.ScatterSeries.MinPointShapeDiameter">
            <summary>
            Gets or sets the min shape diameter, the points using the min weight in the series will have this radius.
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.DefaultGeoMapTooltip">
            <summary>
            DefaultGeoMapTooltip
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.DefaultGeoMapTooltip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveCharts.Wpf.DefaultGeoMapTooltip"/> class.
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.DefaultGeoMapTooltip.CornerRadiusProperty">
            <summary>
            The corner radius property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.DefaultGeoMapTooltip.LabelFormatterProperty">
            <summary>
            The label formatter property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.DefaultGeoMapTooltip.GeoDataProperty">
            <summary>
            The geo data property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.DefaultGeoMapTooltip.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultGeoMapTooltip.CornerRadius">
            <summary>
            Gets or sets the corner radius.
            </summary>
            <value>
            The corner radius.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultGeoMapTooltip.LabelFormatter">
            <summary>
            Gets or sets the label formatter.
            </summary>
            <value>
            The label formatter.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultGeoMapTooltip.GeoData">
            <summary>
            Gets or sets the geo data.
            </summary>
            <value>
            The geo data.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.GeoData">
            <summary>
            
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.GeoData.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.GeoData.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.GeoDataLabelConverter">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Data.IMultiValueConverter"/>
        </member>
        <member name="M:LiveCharts.Wpf.GeoDataLabelConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the binding target. The data binding engine calls this method when it propagates the values from source bindings to the binding target.
            </summary>
            <param name="values">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding" /> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indicates that the source binding has no value to provide for conversion.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indicates that the converter did not produce a value, and that the binding will use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> if it is available, or else will use the default value.A return value of <see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" /> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> or the default value.
            </returns>
        </member>
        <member name="M:LiveCharts.Wpf.GeoDataLabelConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
            <param name="value">The value that the binding target produces.</param>
            <param name="targetTypes">The array of types to convert to. The array length indicates the number and types of values that are suggested for the method to return.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            An array of values that have been converted from the target value back to the source values.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:LiveCharts.Wpf.DefaultGeometries">
            <summary>
            Contains an already defined collection of geometries, useful to set the Series.PointGeomety property
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultGeometries.None">
            <summary>
            Returns a null geometry
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultGeometries.Circle">
            <summary>
            Returns a circle geometry
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultGeometries.Square">
            <summary>
            Returns a square geometry
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultGeometries.Diamond">
            <summary>
            Returns a diamond geometry
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultGeometries.Triangle">
            <summary>
            Returns a triangle geometry
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultGeometries.Cross">
            <summary>
            Returns a cross geometry
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.HeatColorRange">
            <summary>
            Interaction logic for HeatColorRange.xaml
            </summary>
            <summary>
            HeatColorRange
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.HeatColorRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveCharts.Wpf.HeatColorRange"/> class.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.HeatColorRange.UpdateFill(System.Windows.Media.GradientStopCollection)">
            <summary>
            Updates the fill.
            </summary>
            <param name="stops">The stops.</param>
        </member>
        <member name="M:LiveCharts.Wpf.HeatColorRange.SetMax(System.String)">
            <summary>
            Sets the maximum.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.HeatColorRange.SetMin(System.String)">
            <summary>
            Sets the minimum.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.HeatColorRange.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.CandleSeries">
            <summary>
            The Candle series defines a financial series, add this series to a cartesian chart
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.CandleSeries.#ctor">
            <summary>
            Initializes a new instance of OhclSeries class
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.CandleSeries.#ctor(System.Object)">
            <summary>
            Initializes a new instance of OhclSeries class with a given mapper
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="F:LiveCharts.Wpf.CandleSeries.MaxColumnWidthProperty">
            <summary>
            The maximum column width property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.CandleSeries.IncreaseBrushProperty">
            <summary>
            The increase brush property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.CandleSeries.DecreaseBrushProperty">
            <summary>
            The decrease brush property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.CandleSeries.ColoringRulesProperty">
            <summary>
            The coloring rules property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.CandleSeries.OnSeriesUpdateStart">
            <summary>
            This method runs when the update starts
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.CandleSeries.GetPointView(LiveCharts.ChartPoint,System.String)">
            <summary>
            Gets the point view.
            </summary>
            <param name="point">The point.</param>
            <param name="label">The label.</param>
            <returns></returns>
        </member>
        <member name="P:LiveCharts.Wpf.CandleSeries.MaxColumnWidth">
            <summary>
            Gets or sets the maximum with of a point, a point will be capped to this width.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.CandleSeries.IncreaseBrush">
            <summary>
            Gets or sets the brush of the point when close value is grater than open value
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.CandleSeries.DecreaseBrush">
            <summary>
            Gets or sets the brush of the point when close value is less than open value
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.CandleSeries.ColoringRules">
            <summary>
            Gets or sets the coloring rules, the coloring rules allows you to customize Stroke and Fill properties according to your needs, the first rule in this collection that returns true, will decide the Stroke/Fill of every point. If this property is not null (default is null), CandleSeries Fill/Stroke will be based on DecreaseBrush and IncreaseBrush properties.
            </summary>
            <value>
            The coloring rules.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.SectionsCollection">
            <summary>
            The SectionsCollection class holds a collection of Axis.Sections
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.SectionsCollection.#ctor">
            <summary>
            Initializes a new instance of SectionsCollection instance
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.AxesCollection">
            <summary>
            Stores a collection of axis.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.AxesCollection.#ctor">
            <summary>
            Initializes a new instance of AxisCollection class
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AxesCollection.Chart">
            <summary>
            Gets the chart that owns the series.
            </summary>
            <value>
            The chart.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.AxisSection">
            <summary>
            An Axis section highlights values or ranges in a chart.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.AxisSection.#ctor">
            <summary>
            Initializes a new instance of AxisSection class
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AxisSection.LabelProperty">
            <summary>
            The label property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AxisSection.FromValueProperty">
            <summary>
            From value property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AxisSection.ToValueProperty">
            <summary>
            To value property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AxisSection.ValueProperty">
            <summary>
            The value property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AxisSection.SectionWidthProperty">
            <summary>
            The section width property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AxisSection.SectionOffsetProperty">
            <summary>
            The section offset property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AxisSection.StrokeProperty">
            <summary>
            The stroke property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AxisSection.FillProperty">
            <summary>
            The fill property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AxisSection.StrokeThicknessProperty">
            <summary>
            The stroke thickness property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AxisSection.StrokeDashArrayProperty">
            <summary>
            The stroke dash array property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AxisSection.DraggableProperty">
            <summary>
            The draggable property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AxisSection.DisableAnimationsProperty">
            <summary>
            The disable animations property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AxisSection.DataLabelProperty">
            <summary>
            The data label property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.AxisSection.DataLabelForegroundProperty">
            <summary>
            The data label brush property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.AxisSection.DrawOrMove(LiveCharts.AxisOrientation,System.Int32)">
            <summary>
            Draws the or move.
            </summary>
            <param name="source">The source.</param>
            <param name="axis">The axis.</param>
        </member>
        <member name="M:LiveCharts.Wpf.AxisSection.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.AxisSection.AsCoreElement(LiveCharts.AxisCore,LiveCharts.AxisOrientation)">
            <summary>
            Ases the core element.
            </summary>
            <param name="axis">The axis.</param>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="P:LiveCharts.Wpf.AxisSection.Model">
            <summary>
            Gets or sets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.AxisSection.Label">
            <summary>
            Gets or sets the name, the title of the section, a visual element will be added to the chart if this property is not null.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AxisSection.FromValue">
            <summary>
            Gets or sets the value where the section starts
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AxisSection.ToValue">
            <summary>
            Gets or sets the value where the section ends
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AxisSection.Value">
            <summary>
            Gets or sets the value where the section is drawn
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AxisSection.SectionWidth">
            <summary>
            Gets or sets the section width
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AxisSection.SectionOffset">
            <summary>
            Gets or sets the section offset.
            </summary>
            <value>
            The section offset.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.AxisSection.Stroke">
            <summary>
            Gets o sets the section stroke, the stroke brush will be used to draw the border of the section
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AxisSection.Fill">
            <summary>
            Gets or sets the section fill brush.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AxisSection.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AxisSection.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array collection, use this property to create dashed stroke sections
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AxisSection.Draggable">
            <summary>
            Gets or sets if a user can drag the section
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.AxisSection.DisableAnimations">
            <summary>
            Gets or sets a value indicating whether the section is animated
            </summary>
            <value>
            <c>true</c> if [disable animations]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.AxisSection.DataLabel">
            <summary>
            Gets or sets a value indicating whether the section should display a label that displays its current value.
            </summary>
            <value>
            <c>true</c> if [data label]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.AxisSection.DataLabelForeground">
            <summary>
            Gets or sets the data label brush.
            </summary>
            <value>
            The label brush.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.Gauge">
            <summary>
            The gauge chart is useful to display progress or completion.
            </summary>
            <seealso cref="T:System.Windows.Controls.UserControl"/>
        </member>
        <member name="M:LiveCharts.Wpf.Gauge.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveCharts.Wpf.Gauge"/> class.
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.GaugeActiveFillProperty">
            <summary>
            The gauge active fill property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.LabelsVisibilityProperty">
            <summary>
            The labels visibility property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.GaugeRenderTransformProperty">
            <summary>
            The gauge render transform property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.Uses360ModeProperty">
            <summary>
            The uses360 mode property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.FromProperty">
            <summary>
            From property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.ToProperty">
            <summary>
            To property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.ValueProperty">
            <summary>
            The value property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.InnerRadiusProperty">
            <summary>
            The inner radius property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.StrokeProperty">
            <summary>
            The stroke property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.StrokeThicknessProperty">
            <summary>
            The stroke thickness property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.ToColorProperty">
            <summary>
            To color property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.FromColorProperty">
            <summary>
            From color property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.GaugeBackgroundProperty">
            <summary>
            The gauge background property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.AnimationsSpeedProperty">
            <summary>
            The animations speed property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.DisableAnimationsProperty">
            <summary>
            The disablea animations property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.LabelFormatterProperty">
            <summary>
            The label formatter property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Gauge.HighFontSizeProperty">
            <summary>
            The high font size property
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.GaugeActiveFill">
            <summary>
            Gets or sets the gauge active fill, if this property is set, From/to color properties interpolation will be ignored
            </summary>
            <value>
            The gauge active fill.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.LabelsVisibility">
            <summary>
            Gets or sets the labels visibility.
            </summary>
            <value>
            The labels visibility.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.GaugeRenderTransform">
            <summary>
            Gets or sets the gauge render transform.
            </summary>
            <value>
            The gauge render transform.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.Uses360Mode">
            <summary>
            Gets or sets whether the gauge uses 360 mode, 360 mode will plot a full circle instead of a semi circle
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.From">
            <summary>
            Gets or sets the value where the gauge starts
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.To">
            <summary>
            Gets or sets the value where the gauge ends
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.Value">
            <summary>
            Gets or sets the current value of the gauge
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.InnerRadius">
            <summary>
            Gets o sets inner radius
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.Stroke">
            <summary>
            Gets or sets stroke, the stroke is the brush used to draw the gauge border.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.StrokeThickness">
            <summary>
            Gets or sets stroke brush thickness
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.ToColor">
            <summary>
            Gets or sets the color when the current value equals to min value, any value between min and max will use an interpolated color.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.FromColor">
            <summary>
            Gets or sets the color when the current value equals to max value, any value between min and max will use an interpolated color.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.GaugeBackground">
            <summary>
            Gets or sets the gauge background
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.AnimationsSpeed">
            <summary>
            G3ts or sets the gauge animations speed
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.DisableAnimations">
            <summary>
            Gets or sets whether the chart is animated
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.LabelFormatter">
            <summary>
            Gets or sets the label formatter, a label formatter takes a double value, and return a string, e.g. val => val.ToString("C");
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Gauge.HighFontSize">
            <summary>
            Gets o sets the label size, if this value is null then it will be automatically calculated, default is null.
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.PieChart">
            <summary>
            The pie chart compares mainly the distribution of the data according to different series.
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.Charts.Base.Chart">
            <summary>
            Base chart class
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.ChartCoreModel">
            <summary>
            Chart core model, the model calculates the chart.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.#ctor">
            <summary>
            Initializes a new instance of Chart class
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.DataClickCommandProperty">
            <summary>
            The data click command property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.DataHoverCommandProperty">
            <summary>
            The data hover command property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.UpdaterTickCommandProperty">
            <summary>
            The updater tick command property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.SeriesColorsProperty">
            <summary>
            The series colors property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.AxisYProperty">
            <summary>
            The axis y property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.AxisXProperty">
            <summary>
            The axis x property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.ChartLegendProperty">
            <summary>
            The chart legend property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.ZoomProperty">
            <summary>
            The zoom property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.PanProperty">
            <summary>
            The pan property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.LegendLocationProperty">
            <summary>
            The legend location property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.SeriesProperty">
            <summary>
            The series property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.AnimationsSpeedProperty">
            <summary>
            The animations speed property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.DisableAnimationsProperty">
            <summary>
            The disable animations property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.DataTooltipProperty">
            <summary>
            The data tooltip property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.HoverableProperty">
            <summary>
            The hoverable property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.ScrollModeProperty">
            <summary>
            The scroll mode property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.ScrollHorizontalFromProperty">
            <summary>
            The scroll horizontal from property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.ScrollHorizontalToProperty">
            <summary>
            The scroll horizontal to property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.ScrollVerticalFromProperty">
            <summary>
            The scroll vertical from property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.ScrollVerticalToProperty">
            <summary>
            The scroll vertical to property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.ScrollBarFillProperty">
            <summary>
            The scroll bar fill property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.ZoomingSpeedProperty">
            <summary>
            The zooming speed property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.UpdaterStateProperty">
            <summary>
            The updater state property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.SetDrawMarginTop(System.Double)">
            <summary>
            Sets the draw margin top.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.SetDrawMarginLeft(System.Double)">
            <summary>
            Sets the draw margin left.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.SetDrawMarginHeight(System.Double)">
            <summary>
            Sets the height of the draw margin.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.SetDrawMarginWidth(System.Double)">
            <summary>
            Sets the width of the draw margin.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.AddToView(System.Object)">
            <summary>
            Adds to view.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.AddToDrawMargin(System.Object)">
            <summary>
            Adds to draw margin.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.RemoveFromView(System.Object)">
            <summary>
            Removes from view.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.RemoveFromDrawMargin(System.Object)">
            <summary>
            Removes from draw margin.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.EnsureElementBelongsToCurrentView(System.Object)">
            <summary>
            Ensures the element belongs to current view.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.EnsureElementBelongsToCurrentDrawMargin(System.Object)">
            <summary>
            Ensures the element belongs to current draw margin.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.ShowLegend(LiveCharts.Dtos.CorePoint)">
            <summary>
            Shows the legend.
            </summary>
            <param name="at">At.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.HideLegend">
            <summary>
            Hides the legend.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.Update(System.Boolean,System.Boolean)">
            <summary>
            Forces the chart to update
            </summary>
            <param name="restartView">Indicates whether the update should restart the view, animations will run again if true.</param>
            <param name="force">Force the updater to run when called, without waiting for the next updater step.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.MapXAxes(LiveCharts.Charts.ChartCore)">
            <summary>
            Maps the x axes.
            </summary>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.MapYAxes(LiveCharts.Charts.ChartCore)">
            <summary>
            Maps the y axes.
            </summary>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.GetNextDefaultColor">
            <summary>
            Gets the default color of the next.
            </summary>
            <returns></returns>
        </member>
        <member name="F:LiveCharts.Wpf.Charts.Base.Chart.TooltipTimeoutProperty">
            <summary>
            The tooltip timeout property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.LoadLegend">
            <summary>
            Loads the legend.
            </summary>
            <returns></returns>
            <exception cref="T:LiveCharts.Helpers.LiveChartsException">The current legend is not valid, ensure it implements IChartLegend</exception>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.HideTooltip">
            <summary>
            Hides the tooltip.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.GetTooltipPosition(LiveCharts.ChartPoint)">
            <summary>
            Gets the tooltip position.
            </summary>
            <param name="senderPoint">The sender point.</param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.Charts.Base.Chart.CallChartUpdater(System.Boolean,System.Boolean)">
            <summary>
            Calls the chart updater
            </summary>
            <param name="animate">if true, the series view will be removed and added again, this restarts animations also.</param>
            <param name="updateNow">forces the updater to run as this function is called.</param>
            <returns></returns>
        </member>
        <member name="E:LiveCharts.Wpf.Charts.Base.Chart.DataClick">
            <summary>
            The DataClick event is fired when a user click any data point
            </summary>
        </member>
        <member name="E:LiveCharts.Wpf.Charts.Base.Chart.DataHover">
            <summary>
            The DataHover event is fired when a user hovers over any data point
            </summary>
        </member>
        <member name="E:LiveCharts.Wpf.Charts.Base.Chart.UpdaterTick">
            <summary>
            This event is fired every time the chart updates.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.DataClickCommand">
            <summary>
            Gets or sets the data click command.
            </summary>
            <value>
            The data click command.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.DataHoverCommand">
            <summary>
            Gets or sets the data hover command.
            </summary>
            <value>
            The data hover command.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.UpdaterTickCommand">
            <summary>
            Gets or sets the updater tick command.
            </summary>
            <value>
            The updater tick command.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.Canvas">
            <summary>
            Gets or sets the chart current canvas
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.RandomizeStartingColor">
            <summary>
            Gets or sets whether charts must randomize the starting default series color.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.IsMocked">
            <summary>
            This property need to be true when unit testing
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.Colors">
            <summary>
            Gets or sets the application level default series color list
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.SeriesColors">
            <summary>
            Gets or sets 
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.AxisY">
            <summary>
            Gets or sets vertical axis
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.AxisX">
            <summary>
            Gets or sets horizontal axis
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.ChartLegend">
            <summary>
            Gets or sets the control to use as chart legend for this chart.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.Zoom">
            <summary>
            Gets or sets chart zoom behavior
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.Pan">
            <summary>
            Gets or sets the chart pan, default is Unset, which bases the behavior according to Zoom property
            </summary>
            <value>
            The pan.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.LegendLocation">
            <summary>
            Gets or sets where legend is located
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.Series">
            <summary>
            Gets or sets chart series collection to plot.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.AnimationsSpeed">
            <summary>
            Gets or sets the default animation speed for this chart, you can override this speed for each element (series and axes)
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.DisableAnimations">
            <summary>
            Gets or sets if the chart is animated or not.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.DataTooltip">
            <summary>
            Gets or sets the chart data tooltip.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.Hoverable">
            <summary>
            gets or sets whether chart should react when a user moves the mouse over a data point.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.ScrollMode">
            <summary>
            Gets or sets chart scroll mode
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.ScrollHorizontalFrom">
            <summary>
            Gets or sets the scrolling horizontal start value
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.ScrollHorizontalTo">
            <summary>
            Gets or sets the scrolling horizontal end value
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.ScrollVerticalFrom">
            <summary>
            Gets or sets the scrolling vertical start value
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.ScrollVerticalTo">
            <summary>
            Gets or sets the scrolling vertical end value
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.ScrollBarFill">
            <summary>
            Gets or sets the scroll bar fill brush
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.ZoomingSpeed">
            <summary>
            Gets or sets zooming speed, goes from 0.95 (slow) to 0.1 (fast), default is 0.8, it means the current axis range percentage that will be draw in the next zooming step
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.UpdaterState">
            <summary>
            Gets or sets chart's updater state
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.Model">
            <summary>
            Gets the chart model, the model is who calculates everything, is the engine of the chart
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.HasTooltip">
            <summary>
            Gets whether the chart has an active tooltip.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.HasDataClickEventAttached">
            <summary>
            Gets whether the chart has a DataClick event attacked.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.HasDataHoverEventAttached">
            <summary>
            Gets whether the chart has a DataHover event attached
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.IsControlLoaded">
            <summary>
            Gets whether the chart is already loaded in the view.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.IsInDesignMode">
            <summary>
            Gets whether the control is in design mode
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.ActualSeries">
            <summary>
            Gets the visible series in the chart
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Charts.Base.Chart.TooltipTimeout">
            <summary>
            Gets or sets the time a tooltip takes to hide when the user leaves the data point.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.PieChart.#ctor">
            <summary>
            Initializes a new instance of PieChart class
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.PieChart.InnerRadiusProperty">
            <summary>
            The inner radius property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.PieChart.StartingRotationAngleProperty">
            <summary>
            The starting rotation angle property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.PieChart.HoverPushOutProperty">
            <summary>
            The hover push out property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.PieChart.GetTooltipPosition(LiveCharts.ChartPoint)">
            <summary>
            Gets the tooltip position.
            </summary>
            <param name="senderPoint">The sender point.</param>
            <returns></returns>
        </member>
        <member name="P:LiveCharts.Wpf.PieChart.InnerRadius">
            <summary>
            Gets or sets the pie inner radius, increasing this property will result in a doughnut chart.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.PieChart.StartingRotationAngle">
            <summary>
            Gets or sets the starting rotation angle in degrees.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.PieChart.HoverPushOut">
            <summary>
            Gets or sets the units that a slice is pushed out when a user moves the mouse over data point.
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.Components.AxisSeparatorElement">
            <summary>
            
            </summary>
            <seealso cref="T:LiveCharts.Definitions.Charts.ISeparatorElementView"/>
        </member>
        <member name="M:LiveCharts.Wpf.Components.AxisSeparatorElement.#ctor(LiveCharts.SeparatorElementCore)">
            <summary>
            Initializes a new instance of the <see cref="T:LiveCharts.Wpf.Components.AxisSeparatorElement"/> class.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Components.AxisSeparatorElement.UpdateLabel(System.String,LiveCharts.AxisCore,LiveCharts.AxisOrientation)">
            <summary>
            Updates the label.
            </summary>
            <param name="text">The text.</param>
            <param name="axis">The axis.</param>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.Components.AxisSeparatorElement.Clear(LiveCharts.Definitions.Charts.IChartView)">
            <summary>
            Clears the specified chart.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Components.AxisSeparatorElement.Place(LiveCharts.Charts.ChartCore,LiveCharts.AxisCore,LiveCharts.AxisOrientation,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Places the specified chart.
            </summary>
            <param name="chart">The chart.</param>
            <param name="axis">The axis.</param>
            <param name="direction">The direction.</param>
            <param name="axisIndex">Index of the axis.</param>
            <param name="toLabel">To label.</param>
            <param name="toLine">To line.</param>
            <param name="tab">The tab.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Components.AxisSeparatorElement.Remove(LiveCharts.Charts.ChartCore)">
            <summary>
            Removes the specified chart.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Components.AxisSeparatorElement.Move(LiveCharts.Charts.ChartCore,LiveCharts.AxisCore,LiveCharts.AxisOrientation,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Moves the specified chart.
            </summary>
            <param name="chart">The chart.</param>
            <param name="axis">The axis.</param>
            <param name="direction">The direction.</param>
            <param name="axisIndex">Index of the axis.</param>
            <param name="toLabel">To label.</param>
            <param name="toLine">To line.</param>
            <param name="tab">The tab.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Components.AxisSeparatorElement.FadeIn(LiveCharts.AxisCore,LiveCharts.Charts.ChartCore)">
            <summary>
            Fades the in.
            </summary>
            <param name="axis">The axis.</param>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:LiveCharts.Wpf.Components.AxisSeparatorElement.FadeOutAndRemove(LiveCharts.Charts.ChartCore)">
            <summary>
            Fades the out and remove.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="P:LiveCharts.Wpf.Components.AxisSeparatorElement.LabelModel">
            <summary>
            Gets the label model.
            </summary>
            <value>
            The label model.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Components.AxisSeparatorElement.Model">
            <summary>
            Gets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.Converters.StringCollectionConverter">
            <summary>
            
            </summary>
            <seealso cref="T:System.ComponentModel.TypeConverter"/>
        </member>
        <member name="M:LiveCharts.Wpf.Converters.StringCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:LiveCharts.Wpf.Converters.StringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="T:LiveCharts.Wpf.Converters.NumericChartValuesConverter">
            <summary>
            
            </summary>
            <seealso cref="T:System.ComponentModel.TypeConverter"/>
        </member>
        <member name="M:LiveCharts.Wpf.Converters.NumericChartValuesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:LiveCharts.Wpf.Converters.NumericChartValuesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="T:LiveCharts.Wpf.DefaultLegend">
            <summary>
            The default legend control, by default a new instance of this control is created for every chart that requires a legend.
            </summary>
            <summary>
            DefaultLegend
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.DefaultLegend.#ctor">
            <summary>
            Initializes a new instance of DefaultLegend class
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.DefaultLegend.OrientationProperty">
            <summary>
            The orientation property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.DefaultLegend.InternalOrientationProperty">
            <summary>
            The internal orientation property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.DefaultLegend.BulletSizeProperty">
            <summary>
            The bullet size property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.DefaultLegend.OnPropertyChanged(System.String)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:LiveCharts.Wpf.DefaultLegend.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="E:LiveCharts.Wpf.DefaultLegend.PropertyChanged">
            <summary>
            Property changed event
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultLegend.Series">
            <summary>
            Gets the series displayed in the legend.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultLegend.Orientation">
            <summary>
            Gets or sets the orientation of the legend, default is null, if null LiveCharts will decide which orientation to use, based on the Chart.Legend location property.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultLegend.InternalOrientation">
            <summary>
            Gets or sets the internal orientation.
            </summary>
            <value>
            The internal orientation.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultLegend.BulletSize">
            <summary>
            Gets or sets the bullet size, the bullet size modifies the drawn shape size.
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.OrientationConverter">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Data.IMultiValueConverter"/>
        </member>
        <member name="M:LiveCharts.Wpf.OrientationConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the binding target. The data binding engine calls this method when it propagates the values from source bindings to the binding target.
            </summary>
            <param name="values">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding" /> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indicates that the source binding has no value to provide for conversion.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indicates that the converter did not produce a value, and that the binding will use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> if it is available, or else will use the default value.A return value of <see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" /> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> or the default value.
            </returns>
        </member>
        <member name="M:LiveCharts.Wpf.OrientationConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
            <param name="value">The value that the binding target produces.</param>
            <param name="targetTypes">The array of types to convert to. The array length indicates the number and types of values that are suggested for the method to return.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            An array of values that have been converted from the target value back to the source values.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:LiveCharts.Wpf.DefaultTooltip">
            <summary>
            The Default Tooltip control, by default any chart that requires a tooltip will create a new instance of this class.
            </summary>
            <summary>
            DefaultTooltip
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.DefaultTooltip.#ctor">
            <summary>
            Initializes a new instance of DefaultTooltip class
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.DefaultTooltip.#cctor">
            <summary>
            Initializes the <see cref="T:LiveCharts.Wpf.DefaultTooltip"/> class.
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.DefaultTooltip.ShowTitleProperty">
            <summary>
            The show title property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.DefaultTooltip.ShowSeriesProperty">
            <summary>
            The show series property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.DefaultTooltip.CornerRadiusProperty">
            <summary>
            The corner radius property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.DefaultTooltip.SelectionModeProperty">
            <summary>
            The selection mode property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.DefaultTooltip.BulletSizeProperty">
            <summary>
            The bullet size property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.DefaultTooltip.IsWrappedProperty">
            <summary>
            The is wrapped property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.DefaultTooltip.OnPropertyChanged(System.String)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:LiveCharts.Wpf.DefaultTooltip.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultTooltip.ShowTitle">
            <summary>
            Gets or sets a value indicating whether the tooltip should show the shared coordinate value in the current tooltip data.
            </summary>
            <value>
              <c>true</c> if [show title]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultTooltip.ShowSeries">
            <summary>
            Gets or sets a value indicating whether should show series name and color.
            </summary>
            <value>
              <c>true</c> if [show series]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultTooltip.CornerRadius">
            <summary>
            Gets or sets the corner radius of the tooltip
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultTooltip.SelectionMode">
            <summary>
            Gets or sets the tooltip selection mode, default is null, if this property is null LiveCharts will decide the selection mode based on the series (that fired the tooltip) preferred section mode
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultTooltip.BulletSize">
            <summary>
            Gets or sets the bullet size, the bullet size modifies the drawn shape size.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultTooltip.IsWrapped">
            <summary>
            Gets or sets whether the tooltip is shared in the current view, this property is useful to control
            the z index of a tooltip according to a set of controls in a container.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultTooltip.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="E:LiveCharts.Wpf.DefaultTooltip.PropertyChanged">
            <summary>
            Occurs when [property changed].
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.SharedConverter">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Data.IValueConverter"/>
        </member>
        <member name="M:LiveCharts.Wpf.SharedConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:LiveCharts.Wpf.SharedConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:LiveCharts.Wpf.ChartPointLabelConverter">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Data.IValueConverter"/>
        </member>
        <member name="M:LiveCharts.Wpf.ChartPointLabelConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:LiveCharts.Wpf.ChartPointLabelConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:LiveCharts.Wpf.ParticipationVisibilityConverter">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Data.IValueConverter"/>
        </member>
        <member name="M:LiveCharts.Wpf.ParticipationVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="M:LiveCharts.Wpf.ParticipationVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:LiveCharts.Wpf.SharedVisibilityConverter">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Data.IMultiValueConverter"/>
        </member>
        <member name="M:LiveCharts.Wpf.SharedVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the binding target. The data binding engine calls this method when it propagates the values from source bindings to the binding target.
            </summary>
            <param name="values">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding" /> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indicates that the source binding has no value to provide for conversion.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indicates that the converter did not produce a value, and that the binding will use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> if it is available, or else will use the default value.A return value of <see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" /> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> or the default value.
            </returns>
        </member>
        <member name="M:LiveCharts.Wpf.SharedVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
            <param name="value">The value that the binding target produces.</param>
            <param name="targetTypes">The array of types to convert to. The array length indicates the number and types of values that are suggested for the method to return.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            An array of values that have been converted from the target value back to the source values.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:LiveCharts.Wpf.TooltipData">
            <summary>
            Contains information about data in a tooltip
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.TooltipData.XFormatter">
            <summary>
            The current X formatter
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.TooltipData.YFormatter">
            <summary>
            The current Y formatter
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.TooltipData.SharedValue">
            <summary>
            Shared coordinate value between points
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.TooltipData.SenderSeries">
            <summary>
            Gets or sets the series that fired the tooltip.
            </summary>
            <value>
            The sender series.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.TooltipData.SelectionMode">
            <summary>
            Current selection mode
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.TooltipData.Points">
            <summary>
            collection of points
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.DataPointViewModel">
            <summary>
            Point Data
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DataPointViewModel.Series">
            <summary>
            Gets info about the series that owns the point, like stroke and stroke thickness
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DataPointViewModel.ChartPoint">
            <summary>
            Gets the ChartPoint instance
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.SeriesViewModel">
            <summary>
            Series Data
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.SeriesViewModel.Title">
            <summary>
            Series Title
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.SeriesViewModel.Stroke">
            <summary>
            Series stroke
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.SeriesViewModel.StrokeThickness">
            <summary>
            Series Stroke thickness
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.SeriesViewModel.Fill">
            <summary>
            Series Fill
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.SeriesViewModel.PointGeometry">
            <summary>
            Series point Geometry
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.Points.PieSlice">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Shapes.Shape"/>
        </member>
        <member name="F:LiveCharts.Wpf.Points.PieSlice.RadiusProperty">
            <summary>
            The radius property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Points.PieSlice.PushOutProperty">
            <summary>
            The push out property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Points.PieSlice.InnerRadiusProperty">
            <summary>
            The inner radius property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Points.PieSlice.WedgeAngleProperty">
            <summary>
            The wedge angle property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Points.PieSlice.RotationAngleProperty">
            <summary>
            The rotation angle property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Points.PieSlice.CentreXProperty">
            <summary>
            The centre x property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Points.PieSlice.CentreYProperty">
            <summary>
            The centre y property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Points.PieSlice.PercentageProperty">
            <summary>
            The percentage property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Points.PieSlice.PieceValueProperty">
            <summary>
            The piece value property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Points.PieSlice.DrawGeometry(System.Windows.Media.StreamGeometryContext)">
            <summary>
            Draws the pie piece
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Points.PieSlice.Radius">
            <summary>
            The radius of this pie piece
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Points.PieSlice.PushOut">
            <summary>
            The distance to 'push' this pie piece out from the centre.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Points.PieSlice.InnerRadius">
            <summary>
            The inner radius of this pie piece
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Points.PieSlice.WedgeAngle">
            <summary>
            The wedge angle of this pie piece in degrees
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Points.PieSlice.RotationAngle">
            <summary>
            The rotation, in degrees, from the Y axis vector of this pie piece.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Points.PieSlice.CentreX">
            <summary>
            The X coordinate of centre of the circle from which this pie piece is cut.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Points.PieSlice.CentreY">
            <summary>
            The Y coordinate of centre of the circle from which this pie piece is cut.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Points.PieSlice.Percentage">
            <summary>
            The percentage of a full pie that this piece occupies.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Points.PieSlice.PieceValue">
            <summary>
            The value that this pie piece represents.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Points.PieSlice.DefiningGeometry">
            <summary>
            Gets a value that represents the <see cref="T:System.Windows.Media.Geometry" /> of the <see cref="T:System.Windows.Shapes.Shape" />.
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.Points.PieUtils">
            <summary>
            
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Points.PieUtils.ComputeCartesianCoordinate(System.Double,System.Double)">
            <summary>
            Converts a coordinate from the polar coordinate system to the cartesian coordinate system.
            </summary>
            <param name="angle"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="T:LiveCharts.Wpf.HeatSeries">
            <summary>
            Use a HeatSeries in a cartesian chart to draw heat maps.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.HeatSeries.#ctor">
            <summary>
            Initializes a new instance of HeatSeries class
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.HeatSeries.#ctor(System.Object)">
            <summary>
            Initializes a new instance of HeatSries class, using a given mapper
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="F:LiveCharts.Wpf.HeatSeries.DrawsHeatRangeProperty">
            <summary>
            The draws heat range property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.HeatSeries.GradientStopCollectionProperty">
            <summary>
            The gradient stop collection property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.HeatSeries.GetPointView(LiveCharts.ChartPoint,System.String)">
            <summary>
            Gets the view of a given point
            </summary>
            <param name="point"></param>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.HeatSeries.Erase(System.Boolean)">
            <summary>
            Erases series
            </summary>
            <param name="removeFromView"></param>
        </member>
        <member name="M:LiveCharts.Wpf.HeatSeries.DrawSpecializedElements">
            <summary>
            Defines special elements to draw according to the series type
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.HeatSeries.PlaceSpecializedElements">
            <summary>
            Places specializes items
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.HeatSeries.InitializeColors">
            <summary>
            Initializes the series colors if they are not set
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.HeatSeries.DrawsHeatRange">
            <summary>
            Gets or sets whether the series should draw the heat range control, it is the vertical frame to the right that displays the heat gradient.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.HeatSeries.GradientStopCollection">
            <summary>
            Gets or sets the gradient stop collection, use every gradient offset and color properties to define your gradient.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.HeatSeries.Stops">
            <summary>
            Gets the gradient stops, this property is normally used internally to communicate with the core of the library.
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.PieSeries">
            <summary>
            The pie series should be added only in a pie chart.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.PieSeries.#ctor">
            <summary>
            Initializes a new instance of PieSeries class
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.PieSeries.#ctor(System.Object)">
            <summary>
            Initializes a new instance of PieSeries class with a given mapper.
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="F:LiveCharts.Wpf.PieSeries.PushOutProperty">
            <summary>
            The push out property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.PieSeries.LabelPositionProperty">
            <summary>
            The label position property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.PieSeries.GetPointView(LiveCharts.ChartPoint,System.String)">
            <summary>
            Gets the view of a given point
            </summary>
            <param name="point"></param>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="P:LiveCharts.Wpf.PieSeries.PushOut">
            <summary>
            Gets or sets the slice push out, this property highlights the slice
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.PieSeries.LabelPosition">
            <summary>
            Gets or sets the label position.
            </summary>
            <value>
            The label position.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.OhlcSeries">
            <summary>
            The OHCL series defines a financial series, add this series to a cartesian chart
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.OhlcSeries.#ctor">
            <summary>
            Initializes a new instance of OhclSeries class
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.OhlcSeries.#ctor(System.Object)">
            <summary>
            Initializes a new instance of OhclSeries class with a given mapper
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="F:LiveCharts.Wpf.OhlcSeries.MaxColumnWidthProperty">
            <summary>
            The maximum column width property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.OhlcSeries.IncreaseBrushProperty">
            <summary>
            The increase brush property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.OhlcSeries.DecreaseBrushProperty">
            <summary>
            The decrease brush property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.OhlcSeries.OnSeriesUpdateStart">
            <summary>
            This method runs when the update starts
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.OhlcSeries.GetPointView(LiveCharts.ChartPoint,System.String)">
            <summary>
            Gets the point view.
            </summary>
            <param name="point">The point.</param>
            <param name="label">The label.</param>
            <returns></returns>
        </member>
        <member name="P:LiveCharts.Wpf.OhlcSeries.MaxColumnWidth">
            <summary>
            Gets or sets the maximum with of a point, a point will be capped to this width.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.OhlcSeries.IncreaseBrush">
            <summary>
            Gets or sets the brush of the point when close value is grater than open value
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.OhlcSeries.DecreaseBrush">
            <summary>
            Gets or sets the brush of the point when close value is less than open value
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.StackedAreaSeries">
            <summary>
            The stacked area compares trends and percentage, add this series to a cartesian chart
            </summary>
            <seealso cref="T:LiveCharts.Wpf.LineSeries"/>
            <seealso cref="T:LiveCharts.Definitions.Series.IStackedAreaSeriesView"/>
        </member>
        <member name="T:LiveCharts.Wpf.LineSeries">
            <summary>
            The line series displays trends between points, you must add this series to a cartesian chart. 
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.LineSeries.#ctor">
            <summary>
            Initializes a new instance of LineSeries class
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.LineSeries.#ctor(System.Object)">
            <summary>
            Initializes a new instance of LineSeries class with a given mapper
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="F:LiveCharts.Wpf.LineSeries.PointGeometrySizeProperty">
            <summary>
            The point geometry size property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.LineSeries.PointForegroundProperty">
            <summary>
            The point foreground property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.LineSeries.LineSmoothnessProperty">
            <summary>
            The line smoothness property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.LineSeries.AreaLimitProperty">
            <summary>
            The area limit property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.LineSeries.OnSeriesUpdateStart">
            <summary>
            This method runs when the update starts
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.LineSeries.GetPointView(LiveCharts.ChartPoint,System.String)">
            <summary>
            Gets the view of a given point
            </summary>
            <param name="point"></param>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.LineSeries.OnSeriesUpdatedFinish">
            <summary>
            This method runs when the update finishes
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.LineSeries.Erase(System.Boolean)">
            <summary>
            Erases series
            </summary>
            <param name="removeFromView"></param>
        </member>
        <member name="M:LiveCharts.Wpf.LineSeries.GetPointDiameter">
            <summary>
            Gets the point diameter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.LineSeries.StartSegment(System.Int32,LiveCharts.Dtos.CorePoint)">
            <summary>
            Starts the segment.
            </summary>
            <param name="atIndex">At index.</param>
            <param name="location">The location.</param>
        </member>
        <member name="M:LiveCharts.Wpf.LineSeries.EndSegment(System.Int32,LiveCharts.Dtos.CorePoint)">
            <summary>
            Ends the segment.
            </summary>
            <param name="atIndex">At index.</param>
            <param name="location">The location.</param>
        </member>
        <member name="P:LiveCharts.Wpf.LineSeries.Figure">
            <summary>
            Gets or sets the figure.
            </summary>
            <value>
            The figure.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.LineSeries.IsPathInitialized">
            <summary>
            Gets or sets a value indicating whether this instance is path initialized.
            </summary>
            <value>
            <c>true</c> if this instance is path initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.LineSeries.ActiveSplitters">
            <summary>
            Gets or sets the active splitters.
            </summary>
            <value>
            The active splitters.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.LineSeries.SplittersCollector">
            <summary>
            Gets or sets the splitters collector.
            </summary>
            <value>
            The splitters collector.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.LineSeries.IsNew">
            <summary>
            Gets or sets a value indicating whether this instance is new.
            </summary>
            <value>
              <c>true</c> if this instance is new; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.LineSeries.PointGeometrySize">
            <summary>
            Gets or sets the point geometry size, increasing this property will make the series points bigger
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.LineSeries.PointForeground">
            <summary>
            Gets or sets the point shape foreground.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.LineSeries.LineSmoothness">
            <summary>
            Gets or sets line smoothness, this property goes from 0 to 1, use 0 to draw straight lines, 1 really curved lines.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.LineSeries.AreaLimit">
            <summary>
            Gets or sets the limit where the fill area changes orientation
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.StackedAreaSeries.#ctor">
            <summary>
            Initializes a new instance of StackedAreaSeries class
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.StackedAreaSeries.#ctor(System.Object)">
            <summary>
            Initializes a new instance of StackedAreaSeries class, with a given mapper
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.StackedAreaSeries.StackModeProperty">
            <summary>
            The stack mode property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.StackedAreaSeries.OnSeriesUpdateStart">
            <summary>
            This method runs when the update starts
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.StackedAreaSeries.StackMode">
            <summary>
            Gets or sets the series stacked mode, values or percentage
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.StackedRowSeries">
            <summary>
            The stacked row series compares the proportion of every series in a point
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.StackedRowSeries.#ctor">
            <summary>
            Initializes a new instance of StackedRow series class
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.StackedRowSeries.#ctor(System.Object)">
            <summary>
            Initializes a new instance of StackedRow series class, with a given mapper
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.StackedRowSeries.MaxRowHeightProperty">
            <summary>
            The maximum row height property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.StackedRowSeries.RowPaddingProperty">
            <summary>
            The row padding property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.StackedRowSeries.StackModeProperty">
            <summary>
            The stack mode property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.StackedRowSeries.LabelsPositionProperty">
            <summary>
            The labels position property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.StackedRowSeries.GetPointView(LiveCharts.ChartPoint,System.String)">
            <summary>
            Gets the view of a given point
            </summary>
            <param name="point"></param>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="P:LiveCharts.Wpf.StackedRowSeries.MaxRowHeight">
            <summary>
            Gets or sets the maximum height of row, any row height will be capped at this value.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.StackedRowSeries.RowPadding">
            <summary>
            Gets or sets the padding between each row in the series.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.StackedRowSeries.StackMode">
            <summary>
            Gets or sets the stacked mode, values or percentage.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.StackedRowSeries.LabelsPosition">
            <summary>
            Gets or sets where the label is placed
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.StackedColumnSeries">
            <summary>
            The stacked column series compares the proportion of every series in a point
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.StackedColumnSeries.#ctor">
            <summary>
            Initializes a new instance of StackedColumnSeries class
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.StackedColumnSeries.#ctor(System.Object)">
            <summary>
            Initializes a new instance of StackedColumnSeries class, with a given mapper
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.StackedColumnSeries.MaxColumnWidthProperty">
            <summary>
            The maximum column width property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.StackedColumnSeries.ColumnPaddingProperty">
            <summary>
            The column padding property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.StackedColumnSeries.StackModeProperty">
            <summary>
            The stack mode property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.StackedColumnSeries.LabelsPositionProperty">
            <summary>
            The labels position property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.StackedColumnSeries.GetPointView(LiveCharts.ChartPoint,System.String)">
            <summary>
            Gets the view of a given point
            </summary>
            <param name="point"></param>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="P:LiveCharts.Wpf.StackedColumnSeries.MaxColumnWidth">
            <summary>
            Gets or sets the maximum width of a column, any column will be capped at this value
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.StackedColumnSeries.ColumnPadding">
            <summary>
            Gets or sets the padding between every column in this series
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.StackedColumnSeries.StackMode">
            <summary>
            Gets or sets stacked mode, values or percentage
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.StackedColumnSeries.LabelsPosition">
            <summary>
            Gets or sets where the label is placed
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.RowSeries">
            <summary>
            The Row series plots horizontal bars in a cartesian chart
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.RowSeries.#ctor">
            <summary>
            Initializes a new instance of RowSeries class
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.RowSeries.#ctor(System.Object)">
            <summary>
            Initializes a new instance of RowSeries class with a given mapper
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="F:LiveCharts.Wpf.RowSeries.MaxRowHeigthProperty">
            <summary>
            The maximum row heigth property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.RowSeries.RowPaddingProperty">
            <summary>
            The row padding property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.RowSeries.LabelsPositionProperty">
            <summary>
            The labels position property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.RowSeries.SharesPositionProperty">
            <summary>
            The shares position property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.RowSeries.GetPointView(LiveCharts.ChartPoint,System.String)">
            <summary>
            Gets the point view.
            </summary>
            <param name="point">The point.</param>
            <param name="label">The label.</param>
            <returns></returns>
        </member>
        <member name="P:LiveCharts.Wpf.RowSeries.MaxRowHeigth">
            <summary>
            Gets or sets the maximum row height, the height of a column will be capped at this value
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.RowSeries.RowPadding">
            <summary>
            Gets or sets the padding between rows in this series
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.RowSeries.LabelsPosition">
            <summary>
            Gets or sets where the label is placed
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.RowSeries.SharesPosition">
            <summary>
            Gets or sets a value indicating whether this row shares space with all the row series in the same position
            </summary>
            <value>
            <c>true</c> if [shares position]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.ColumnSeries">
            <summary>
            Use the column series to plot horizontal bars in a cartesian chart
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.ColumnSeries.#ctor">
            <summary>
            Initializes a new instance of ColumnSeries class
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.ColumnSeries.#ctor(System.Object)">
            <summary>
            Initializes a new instance of ColumnSeries class, using a given mapper
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.ColumnSeries.MaxColumnWidthProperty">
            <summary>
            The maximum column width property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.ColumnSeries.ColumnPaddingProperty">
            <summary>
            The column padding property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.ColumnSeries.LabelsPositionProperty">
            <summary>
            The labels position property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.ColumnSeries.SharesPositionProperty">
            <summary>
            The shares position property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.ColumnSeries.GetPointView(LiveCharts.ChartPoint,System.String)">
            <summary>
            Gets the view of a given point
            </summary>
            <param name="point"></param>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="P:LiveCharts.Wpf.ColumnSeries.MaxColumnWidth">
            <summary>
            Gets or sets the MaxColumnWidht in pixels, the column width will be capped at this value.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.ColumnSeries.ColumnPadding">
            <summary>
            Gets or sets the padding between the columns in the series.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.ColumnSeries.LabelsPosition">
            <summary>
            Gets or sets where the label is placed
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.ColumnSeries.SharesPosition">
            <summary>
            Gets or sets a value indicating whether this column shares space with all the column series in the same position
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.StepLineSeries">
            <summary>
            The Step line series.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.StepLineSeries.#ctor">
            <summary>
            Initializes a new instance of BubbleSeries class
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.StepLineSeries.#ctor(System.Object)">
            <summary>
            Initializes a new instance of BubbleSeries class using a given mapper
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="F:LiveCharts.Wpf.StepLineSeries.PointGeometrySizeProperty">
            <summary>
            The point geometry size property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.StepLineSeries.PointForegroundProperty">
            <summary>
            The point foreround property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.StepLineSeries.AlternativeStrokeProperty">
            <summary>
            The alternative stroke property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.StepLineSeries.InvertedModeProperty">
            <summary>
            The inverted mode property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.StepLineSeries.GetPointView(LiveCharts.ChartPoint,System.String)">
            <summary>
            Gets the view of a given point
            </summary>
            <param name="point"></param>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.StepLineSeries.InitializeColors">
            <summary>
            Initializes the series colors if they are not set
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.StepLineSeries.GetPointDiameter">
            <summary>
            Gets the point diameter.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LiveCharts.Wpf.StepLineSeries.PointGeometrySize">
            <summary>
            Gets or sets the point geometry size, increasing this property will make the series points bigger
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.StepLineSeries.PointForeground">
            <summary>
            Gets or sets the point shape foreground.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.StepLineSeries.AlternativeStroke">
            <summary>
            Gets or sets the alternative stroke.
            </summary>
            <value>
            The alternative stroke.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.StepLineSeries.InvertedMode">
            <summary>
            Gets or sets a value indicating whether the series should be drawn using the inverted mode.
            </summary>
            <value>
              <c>true</c> if [inverted mode]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.VerticalStackedAreaSeries">
            <summary>
            Compares trend and proportion, this series must be added in a cartesian chart.
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.VerticalLineSeries">
            <summary>
            The vertical line series is useful to compare trends, this is the inverted version of the LineSeries, this series must be added in a cartesian chart.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.VerticalLineSeries.#ctor">
            <summary>
            Initializes an new instance of VerticalLineSeries class
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.VerticalLineSeries.#ctor(System.Object)">
            <summary>
            Initializes an new instance of VerticalLineSeries class, with a given mapper
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.VerticalLineSeries.OnSeriesUpdateStart">
            <summary>
            This method runs when the update starts
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.VerticalLineSeries.GetPointView(LiveCharts.ChartPoint,System.String)">
            <summary>
            Gets the view of a given point
            </summary>
            <param name="point"></param>
            <param name="label"></param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.VerticalLineSeries.StartSegment(System.Int32,LiveCharts.Dtos.CorePoint)">
            <summary>
            Starts the segment.
            </summary>
            <param name="atIndex">At index.</param>
            <param name="location">The location.</param>
        </member>
        <member name="M:LiveCharts.Wpf.VerticalLineSeries.EndSegment(System.Int32,LiveCharts.Dtos.CorePoint)">
            <summary>
            Ends the segment.
            </summary>
            <param name="atIndex">At index.</param>
            <param name="location">The location.</param>
        </member>
        <member name="M:LiveCharts.Wpf.VerticalStackedAreaSeries.#ctor">
            <summary>
            Initializes a new instance of VerticalStackedAreaSeries class
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.VerticalStackedAreaSeries.#ctor(System.Object)">
            <summary>
            Initializes a new instance of VerticalStackedAreaSeries class, with a given mapper
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.VerticalStackedAreaSeries.StackModeProperty">
            <summary>
            The stack mode property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.VerticalStackedAreaSeries.OnSeriesUpdateStart">
            <summary>
            This method runs when the update starts
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.VerticalStackedAreaSeries.StackMode">
            <summary>
            Gets or sets the series stack mode, values or percentage
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.DefaultAxes">
            <summary>
            Contains a collection of already defined axes.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultAxes.DefaultAxis">
            <summary>
            Returns default axis
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultAxes.CleanAxis">
            <summary>
            Return an axis without separators at all
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultAxes.OnlyZerosAxis">
            <summary>
            Returns an axis that only displays a line for zero
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.DefaultAxes.CleanSeparator">
            <summary>
            Gets the clean separator.
            </summary>
            <value>
            The clean separator.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.Components.TooltipDto">
            <summary>
            A tooltip element data transfer object
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Components.TooltipDto.Series">
            <summary>
            Gets or sets the series.
            </summary>
            <value>
            The series.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Components.TooltipDto.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>
            The index.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Components.TooltipDto.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Components.TooltipDto.Fill">
            <summary>
            Gets or sets the fill.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Components.TooltipDto.Point">
            <summary>
            Gets or sets the point.
            </summary>
            <value>
            The point.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Components.TooltipDto.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:LiveCharts.Wpf.CartesianChart">
            <summary>
            The Cartesian chart can plot any series with x and y coordinates
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.CartesianChart.#ctor">
            <summary>
            Initializes a new instance of CartesianChart class
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.CartesianChart.VisualElementsProperty">
            <summary>
            The visual elements property
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.CartesianChart.VisualElements">
            <summary>
            Gets or sets the collection of visual elements in the chart, a visual element display another UiElement in the chart.
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.Extentions">
            <summary>
            
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Extentions.ConvertToChartValues(LiveCharts.Wpf.Charts.Base.Chart,System.Windows.Point,System.Int32,System.Int32)">
            <summary>
            Converts a point at screen to chart values scale
            </summary>
            <param name="chart">Target chart</param>
            <param name="screenPoint">point in screen</param>
            <param name="axisX">axis x index</param>
            <param name="axisY">axis y index</param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.Extentions.ConvertToPixels(LiveCharts.Wpf.Charts.Base.Chart,System.Windows.Point,System.Int32,System.Int32)">
            <summary>
            Converts a chart values pair to pixels
            </summary>
            <param name="chart">Target chart</param>
            <param name="chartPoint">point in screen</param>
            <param name="axisX">axis x index</param>
            <param name="axisY">axis y index</param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.Extentions.AsPoint(LiveCharts.ChartPoint)">
            <summary>
            Converts a ChartPoint to Point
            </summary>
            <param name="chartPoint">point to convert</param>
            <returns></returns>
        </member>
        <member name="M:LiveCharts.Wpf.Extentions.AsPoint(LiveCharts.Dtos.CorePoint)">
            <summary>
            Converts a CorePoint to Point
            </summary>
            <param name="point">point to convert</param>
            <returns></returns>
        </member>
        <member name="T:LiveCharts.Wpf.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.Separator">
            <summary>
            Defines an Axis.Separator, this class customizes the separator of an axis.
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Separator.#ctor">
            <summary>
            Initializes a new instance of Separator class
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Separator.StrokeProperty">
            <summary>
            The stroke property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Separator.StrokeThicknessProperty">
            <summary>
            The stroke thickness property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Separator.StrokeDashArrayProperty">
            <summary>
            The stroke dash array property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Separator.StepProperty">
            <summary>
            The step property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Separator.ActualStepProperty">
            <summary>
            The actual step property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.Separator.AxisOrientationProperty">
            <summary>
            The axis orientation property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.Separator.AsCoreElement(LiveCharts.AxisCore,LiveCharts.AxisOrientation)">
            <summary>
            Ases the core element.
            </summary>
            <param name="axis">The axis.</param>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="P:LiveCharts.Wpf.Separator.Chart">
            <summary>
            Gets the chart the own the separator
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Separator.Stroke">
            <summary>
            Gets or sets separators color 
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Separator.StrokeThickness">
            <summary>
            Gets or sets separators thickness
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Separator.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array for the current separator.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Separator.Step">
            <summary>
            Gets or sets separators step, this means the value between each line, default is null, when null this value is calculated automatically.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.Separator.ActualStep">
            <summary>
            Gets the actual step.
            </summary>
            <value>
            The actual step.
            </value>
        </member>
        <member name="P:LiveCharts.Wpf.Separator.AxisOrientation">
            <summary>
            Gets or sets the element orientation ind the axis
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.VisualElement">
            <summary>
            Defines a visual element, a visual element is a UI element that is placed and scaled in the chart.
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.VisualElement.XProperty">
            <summary>
            The x property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.VisualElement.YProperty">
            <summary>
            The y property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.VisualElement.AddOrMove(LiveCharts.Charts.ChartCore)">
            <summary>
            Adds the or move.
            </summary>
            <param name="chart">The chart.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            </exception>
        </member>
        <member name="M:LiveCharts.Wpf.VisualElement.Remove(LiveCharts.Charts.ChartCore)">
            <summary>
            Removes the specified chart.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="P:LiveCharts.Wpf.VisualElement.UIElement">
            <summary>
            Gets or sets the user interface element.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.VisualElement.AxisX">
            <summary>
            Gets or sets the index of the axis in X that owns the element, the axis position must exist.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.VisualElement.AxisY">
            <summary>
            Gets or sets the index of the axis in Y that owns the element, the axis position must exist.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.VisualElement.X">
            <summary>
            Gets or sets the X value of the UiElement
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.VisualElement.Y">
            <summary>
            Gets or sets the Y value of the UiElement
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.GeoMap">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Controls.UserControl"/>
        </member>
        <member name="M:LiveCharts.Wpf.GeoMap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LiveCharts.Wpf.GeoMap"/> class.
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.GeoMap.LanguagePackProperty">
            <summary>
            The language pack property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.GeoMap.DefaultLandFillProperty">
            <summary>
            The default land fill property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.GeoMap.LandStrokeThicknessProperty">
            <summary>
            The land stroke thickness property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.GeoMap.LandStrokeProperty">
            <summary>
            The land stroke property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.GeoMap.DisableAnimationsProperty">
            <summary>
            The disable animations property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.GeoMap.AnimationsSpeedProperty">
            <summary>
            The animations speed property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.GeoMap.HoverableProperty">
            <summary>
            The hoverable property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.GeoMap.HeatMapProperty">
            <summary>
            The heat map property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.GeoMap.GradientStopCollectionProperty">
            <summary>
            The gradient stop collection property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.GeoMap.SourceProperty">
            <summary>
            The source property
            </summary>
        </member>
        <member name="F:LiveCharts.Wpf.GeoMap.EnableZoomingAndPanningProperty">
            <summary>
            The enable zooming and panning property
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.GeoMap.Restart">
            <summary>
            Restarts the current map view
            </summary>
        </member>
        <member name="M:LiveCharts.Wpf.GeoMap.UpdateKey(System.String,System.Double)">
            <summary>
            Sets a heat map value with a given key, then updates every land heat color
            </summary>
            <param name="key">key</param>
            <param name="value">new value</param>
        </member>
        <member name="E:LiveCharts.Wpf.GeoMap.LandClick">
            <summary>
            Occurs when [land click].
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.GeoMap.LanguagePack">
            <summary>
            Gets or sets the language dictionary
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.GeoMap.DefaultLandFill">
            <summary>
            Gets or sets default land fill
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.GeoMap.LandStrokeThickness">
            <summary>
            Gets or sets every land stroke thickness property
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.GeoMap.LandStroke">
            <summary>
            Gets or sets every land stroke
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.GeoMap.DisableAnimations">
            <summary>
            Gets or sets whether the chart is animated
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.GeoMap.AnimationsSpeed">
            <summary>
            Gets or sets animations speed
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.GeoMap.Hoverable">
            <summary>
            Gets or sets whether the chart reacts when a user moves the mouse over a land
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.GeoMap.HeatMap">
            <summary>
            Gets or sets the current heat map
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.GeoMap.GradientStopCollection">
            <summary>
            Gets or sets the gradient stop collection, use every gradient offset and color properties to define your gradient.
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.GeoMap.Source">
            <summary>
            Gets or sets the map source
            </summary>
        </member>
        <member name="P:LiveCharts.Wpf.GeoMap.EnableZoomingAndPanning">
            <summary>
            Gets or sets whether the map allows zooming and panning
            </summary>
        </member>
        <member name="T:LiveCharts.Wpf.ScaleStrokeConverter">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Data.IMultiValueConverter"/>
        </member>
        <member name="M:LiveCharts.Wpf.ScaleStrokeConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the binding target. The data binding engine calls this method when it propagates the values from source bindings to the binding target.
            </summary>
            <param name="values">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding" /> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indicates that the source binding has no value to provide for conversion.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indicates that the converter did not produce a value, and that the binding will use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> if it is available, or else will use the default value.A return value of <see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" /> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> or the default value.
            </returns>
        </member>
        <member name="M:LiveCharts.Wpf.ScaleStrokeConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
            <param name="value">The value that the binding target produces.</param>
            <param name="targetTypes">The array of types to convert to. The array length indicates the number and types of values that are suggested for the method to return.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            An array of values that have been converted from the target value back to the source values.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
    </members>
</doc>
