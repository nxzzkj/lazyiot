@model  ScadaWeb.Web.Areas.Permissions.Models.TableRealModel
@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_LayoutList.cshtml";
}
<div class="layui-collapse" lay-filter="test">
    <div class="layui-colla-item">
        <h2 class="layui-colla-title">展开/折叠  --@Model.Title</h2>
        <div class="layui-colla-content  layui-show">

            <div class="layui-tab">
                <ul class="layui-tab-title">
                    <li class="layui-this">实时监控</li>
                    @if (Model.ScadaTable.ShowHistory == 1)
                    {
                        <li>历史查询</li>
                    }
                    @if (Model.ScadaTable.ShowHistoryAlarms == 1)
                    {
                        <li>历史报警</li>
                    }

                </ul>
                <div class="layui-tab-content">

                    <div class="layui-tab-item layui-show" id="tableContent">
                        <!--数据表格-->
                        <table class="layui-hide" id="realtableId" lay-filter="realtableId"></table>
                    </div>
                    @if (Model.ScadaTable.ShowHistory == 1)
                    {
                        <div class="layui-tab-item">
                            <div class="layui-row">
                            <form class="layui-form layui-col-md12 ok-search" lay-filter="formHistory" id="formHistory" name="formHistory">
    <div class="layui-input-inline">
        <input type="hidden" id="IOTitle" name="IOTitle" value="">
        <select id="IOPath" name="IOPath" style="width:120px;" lay-filter="IOPath">
            <option value="">未选择</option>
            @foreach (var item in Model.Devices)
            {
                <option data-ioname="@item.IOPARANAMES" data-iotitle="@item.IOPARATITLES" value="@item.GroupId/@item.IO_SERVER_ID/@item.IO_COMM_ID/@item.IO_DEVICE_ID">@item.ALIASNAME</option>
            }
        </select>
    </div>
    <div class="layui-input-inline">
        <input class="layui-input" placeholder="开始日期" name="StartDate" id="StartDate" value="@Model.SDate">
    </div>
    <div class="layui-input-inline">
        <input class="layui-input" placeholder="结束日期" name="EndDate" id="EndDate" value="@Model.EDate">
    </div>
    <div class="layui-input-inline">
        <button class='layui-btn ' type="button" lay-submit='' lay-filter="btHistory">
            <i class='layui-icon'>&#xe615;</i>查询
        </button>
    </div>

</form></div>
                    <table class="layui-hide" id="historytableId" lay-filter="historytableId"></table>
                        </div>
                    }
                    @if (Model.ScadaTable.ShowHistoryAlarms == 1)
                    {
                        <div class="layui-tab-item">
                            <div class="layui-row">
                                <form class="layui-form layui-col-md12 ok-search" lay-filter="formHistoryAlarm" id="formHistoryAlarm" name="formHistoryAlarm">

                                    <div class="layui-input-inline">
                                        <input type="hidden" id="AlarmIOTitle" name="AlarmIOTitle" value="" />
                                        <select id="AlarmIOPath" name="AlarmIOPath" placeholder="设备列表" style="width:120px;" lay-filter="AlarmIOPath">
                                            <option value="">未选择</option>
                                            @foreach (var item in Model.Devices)
                                            {
                                                <option data-ioname="@item.IOPARANAMES" data-iotitle="@item.IOPARATITLES" value="@item.GroupId/@item.IO_SERVER_ID/@item.IO_COMM_ID/@item.IO_DEVICE_ID">@item.ALIASNAME</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="layui-input-inline">
                                        <input class="layui-input" placeholder="开始日期" name="AlarmStartDate" id="AlarmStartDate" value="@Model.SDate">
                                    </div>
                                    <div class="layui-input-inline">
                                        <input class="layui-input" placeholder="结束日期" name="AlarmEndDate" id="AlarmEndDate" value="@Model.EDate">
                                    </div>
                                    <button class='layui-btn ' type="button"  lay-submit='' lay-filter='btHistoryAlarm'>
                                        <i class='layui-icon'>&#xe615;</i>查询
                                    </button>
                                </form>
                            </div>
                            <table class="layui-hide" id="historyalarmtableId" lay-filter="historyalarmtableId"></table>
                        </div>
                    }

                </div>
            </div>

        </div>
    </div>

</div>
<div class="layui-collapse" lay-filter="test">
    <div class="layui-colla-item">
        <h2 class="layui-colla-title">展开/折叠  曲线/报警</h2>
        <div class="layui-colla-content ">


            @*实时曲线和实时报警*@
            @if (Model.ScadaTable.ShowRealSeries == 1 || Model.ScadaTable.ShowAlarms == 1)
            {
                <div class="row">

                    <div class="layui-tab">
                        <ul class="layui-tab-title">
                            @if (Model.ScadaTable.ShowRealSeries == 1)
                            {
                                <li class="layui-this">实时曲线</li>
                            }
                            @if (Model.ScadaTable.ShowAlarms == 1)
                            {
                                <li>实时报警</li>
                            }

                        </ul>
                        <div class="layui-tab-content">
                            @if (Model.ScadaTable.ShowRealSeries == 1)
                            {
                                <div class="layui-tab-item layui-show">
                                    <div id="stackrealchart" style="width:100%;height:300px"></div>
                                </div>
                            }
                            @if (Model.ScadaTable.ShowAlarms == 1)
                            {
                                <div class="layui-tab-item">

                                    <table class="layui-hide" id="alarmtableId" lay-filter="tableFilter"></table>
                                </div>
                            }



                        </div>
                    </div>
                </div>
            }

        </div>
    </div>

</div>
<script src="~/Content/lib/echarts/echarts.min.js"></script>
<!-- 注意：如果你直接复制所有代码到本地，上述js路径需要改成你本地的 -->
<script>
                //初始化曲线图版
                var Current={};
                InitChart();
                
                layui.config({ base: '/Content/lib/tablePlug/' }).use(["table", "form", "okLayer", "okUtils", "treeSelect", 'tablePlug', 'element', "laydate"], function () {
                    let table = layui.table;
                    let form = layui.form;
                    let treeSelect = layui.treeSelect;
                    let okLayer = layui.okLayer;
                    let okUtils = layui.okUtils;
                    let tablePlug = layui.tablePlug;
                    let element = layui.element; //Tab的切换功能，切换事件监听等，需要依赖element模块
                    let startdate = layui.laydate;
                    let enddate = layui.laydate;
                    let alarmstartdate = layui.laydate;
                    let alarmenddate = layui.laydate;
                    var $ = layui.$;

                    startdate.render({
                        elem: '#StartDate'
                       , type: 'datetime'
                    });
                    enddate.render({
                        elem: '#EndDate'
                      , type: 'datetime'
                    });
                    alarmstartdate.render({
                        elem: '#AlarmStartDate'
                     , type: 'datetime'
                    });
                    alarmenddate.render({
                        elem: '#AlarmEndDate'
                      , type: 'datetime'
                    });
                    
                  
                    tablePlug.smartReload.enable(true);//处理不闪动的关键代码
                    /******************** 加载设计模板******************************/
                    var Columns = [];

                    var widths = @MvcHtmlString.Create( Model.colwidthmodels);
                    var coltitles =@MvcHtmlString.Create(Model.coltitlesmodels);
                    for (var i = 0; i < coltitles.length; i++)
                    {
                        Columns.push({ field: SCADA.numToString(i), title:coltitles[i], align: 'center', width: widths[i] ,event: 'setSign_' + SCADA.numToString(i),custitle:coltitles[i] });
                    }
                    var backcolors =eval('(@MvcHtmlString.Create( Model.FieldBackColors))');
                    var fontcolors =eval('(@MvcHtmlString.Create( Model.FieldColors))');
                    var fontsizes = eval('(@MvcHtmlString.Create( Model.FieldFontSizes))');
                    var fontweights =eval('(@MvcHtmlString.Create( Model.FieldWeights))');
                    var ioModels=eval('(@MvcHtmlString.Create( Model.FieldIOPaths))');
                    var DeviceModels=eval('(@MvcHtmlString.Create( Model.JsonDevices))');
                    function Layui_SetDataTableTdProperties(DivId, RowIndex, ColIndex, backColor, fontColor, fontSize, fontWeight)
                    {
                        try
                        {
                            var div = document.getElementById(DivId);
                            if(div != null) //找到对象了
                            {
                                var table_main = div.getElementsByClassName('layui-table-main');   //通过class获取table_main
                                if (table_main != null && table_main.length > 0)
                                {
                                    var table = table_main[0].getElementsByClassName('layui-table');   //通过class获取table
                                    if (table != null && table.length > 0) {
                                        var trs = table[0].querySelectorAll("tr");
                                        if (trs != null && trs.length > 0) {

                                            var tds = trs[RowIndex].querySelectorAll("td");
                                            if (tds != null && tds.length > 0) {
                                                if (fontColor != null && fontColor!="")
                                                    tds[ColIndex].style.color = fontColor;//字体颜色 
                                                if (backColor != null && backColor != "")
                                                    tds[ColIndex].style.backgroundColor = backColor;//背景颜色
                                                if (fontSize != null && fontSize != "")
                                                    tds[ColIndex].style.fontSize = fontSize;
                                                if (fontWeight != null && fontWeight != "")
                                                    tds[ColIndex].style.fontWeight = fontWeight;

                                            }


                                        }
                                    }
                                }
                
                            }
                        }
                        catch(e)
                        {
                            console.log(e.message);
                        }
                    }

                    let realTable = table.render({
                        elem: "#realtableId",
                        url:"Scada/ScadaTable/LoadRealTable",
                        limit: 1000,
                        limits: [100, 200, 300, 500, 600, 800, 1000, 1500, 2000, 3000],
                        width: document.body.clientWidth - 60,
                        height: 'full-120',
                        page: false,
                        loading: false,
                        id: 'realtableId',
                        smartReloadModel:true,
                        jump: function (obj, first) {
                            if (!first) {
                                layer.msg('第 ' + obj.curr + ' 页');
                            }
                        },
                        size: "sm",
                        cols: [Columns],
                        done: function (res, curr, count) {

                            for (var i = 0; i < 26; i++)
                            {
                                for(var j=0;j<res.data.length;j++)
                                {
                                    Layui_SetDataTableTdProperties('tableContent', j, i, backcolors[j][i], fontcolors[j][i], fontsizes[j][i], fontweights[j][i])
                                }
                            }
                            setTableScoll(this.elem.next('.layui-table-view'), this.scroll);

                        },

                    });
                    table.on("tool(realtableId)", function (obj) {
                        let data = obj.data;
                        switch (obj.event.split('_')[0]) {
                            case "setSign":
                                setSign(obj);
                                break;

                        }
                    });
                    function setSign(data) {
                        var column = data.event.split('_')[1];
                        var ColIndex = SCADA.stringTonum(column);
                        var RowIndex=data.tr[0].rowIndex;//行
                        //设置单元格背景和字体颜色字体类型
                        var ioPath=ioModels[RowIndex][column];
                        if(ioPath.split("/").length>=8)
                        {
                            Current={CurrentIOID:ioPath.split("/")[5],CurrentServerID:ioPath.split("/")[2],CurrentCommunicateID:ioPath.split("/")[3],CurrentDeviceID:ioPath.split("/")[4],CurrentGroupID:ioPath.split("/")[1]};
                            InitChart();
                        }

                    }
                    //获取滚动条
                    function getTableScoll(tbView){
                        var scrollTop = tbView.find('.layui-table-body').scrollTop();
                        var scrollLeft= tbView.find('.layui-table-body').scrollLeft();
                        return {
                            scrollTop:scrollTop,scrollLeft:scrollLeft
                        }
                    };
                    //设置滚动条
                    function setTableScoll(tbView,scoll={scrollTop:0,scrollLeft:0})
                {

                    tbView.find('.layui-table-body').scrollTop(scoll.scrollTop);
                    tbView.find('.layui-table-body').scrollLeft(scoll.scrollLeft);
                    table.resize('realtableId'); //重置表格尺寸
                };




                var scrollTop=0;
                var layuiTable = $('.layui-table-main');
                if(layuiTable!=null&&layuiTable.length>0){
                    scrollTop = layuiTable[0].scrollTop;
                }

                let historyTable = table.render({
                    elem: "#historytableId",
                    limit: 1000,
                    limits: [100, 200, 300, 500, 600, 800, 1000, 1500, 2000, 3000],
                    width: document.body.clientWidth - 60,
                    height: 'full-120',
                    page: true,
                    loading: true,
                    id: 'historytableId',
                    toolbar: "#historytoolbarTpl",
                    jump: function (obj, first) {
                        if (!first) {
                            layer.msg('第 ' + obj.curr + ' 页');
                        }
                    },
                    size: "sm",
                    cols: [],
                    done: function (res, curr, count) {

                    },

                });
                //下拉设备列表监听
                form.on('select(IOPath)', function(data){
                    var iotitle= $("#IOPath").find("option:selected").data("iotitle")//...
                    var ioname=$("#IOPath").find("option:selected").data("ioname")//...
                    if(ioname==undefined||iotitle==undefined)
                    {
                        return;
                    }
                    var historycolumn=[];
                    historycolumn.push({ field: 'DateStampTime', title:'采集时间', align: 'center', width: 120});
                    for(var i=0;i<ioname.split(",").length;i++)
                    {

                        
                        historycolumn.push({ field: ioname.split(",")[i], title:iotitle.split(",")[i], align: 'center', width: 120});
                    }
                    if(ioname!=undefined&&iotitle!=undefined)
                    {
                        historyTable = table.render({
                            elem: "#historytableId",
                            url: "/Scada/ScadaTable/ScadaTableHistory?groupid=" + Current.CurrentGroupID + "&serverid=" +Current.CurrentServerID + "&communicateid=" + Current.CurrentCommunicateID + "&deviceid=" + Current.CurrentDeviceID+"&IOTitle="+$("#IOTitle").val(),
                            limit: 1000,
                            limits: [100, 200, 300, 500, 600, 800, 1000, 1500, 2000, 3000],
                            width: document.body.clientWidth - 60,
                            height: 'full-120',
                            page: true,
                            loading: true,
                            id: 'historytableId',
                
                            jump: function (obj, first) {
                                if (!first) {
                                    layer.msg('第 ' + obj.curr + ' 页');
                                }
                            },
                            size: "sm",
                            cols: [historycolumn],
                            done: function (res, curr, count) {

                            },
                            parseData: function (res) { //将原始数据解析成 table 组件所规定的数据
                                var result = eval('(' + res + ')');
                                return result;
                            }
                        });
                    }
                             
                        
                });
                form.on('submit(btHistory)', function (data) {
                    historyTable.reload({
                        where: data.field,
                        page: { curr: 1 } 
               
                    });
                    return false;
                   
                });
                //记载报警数据
     

                let historyAlarmTable = table.render({
                    elem: "#historyalarmtableId",
       
                    limit: 1000,
                    limits: [100, 200, 300, 500, 600, 800, 1000, 1500, 2000, 3000],
                    width: document.body.clientWidth - 60,
                    height: 'full-120',
                    page: true,
                    loading: true,
                    id: 'historyalarmtableId',
                  
                    jump: function (obj, first) {
                        if (!first) {
                            layer.msg('第 ' + obj.curr + ' 页');
                        }
                    },
                    size: "sm",

                    cols: [[
                         { field: 'zizeng', width: 60, title: '序号', fixed: 'left', templet: '#zizeng' },
                         { field: "IO_ID", title: "报警ID", width: 140, fixed: 'left' },
                         { field: "IO_LABEL", title: "名称", width: 100 },
                         { field: "IO_ALARM_DATE", title: "报警时间", width: 140 },
                         { field: "IO_ALARM_TYPE", title: "报警类型", width: 100 },
                         { field: "IO_ALARM_LEVEL", title: "报警级别", width: 100 },
                         { field: "IO_ALARM_VALUE", title: "报警值", width: 100 },
                         { field: "IO_ALARM_DISPOSALUSER", title: "处置人", width: 120, edit: 'text', style: 'font-size: 12px;background-color: #ff0000;' },
                         { field: "IO_ALARM_DISPOSALIDEA", title: "处置意见", width: 120, edit: 'text', style: 'font-size: 12px;background-color: #ff0000;' },
                    ]],

                    done: function (res, curr, count) {

                    },

                });

              
                form.on('select(AlarmIOPath)', function(data){
                       
                    var iotitle= $("#AlarmIOPath").find("option:selected").data("iotitle")//...
                    var ioname=$("#AlarmIOPath").find("option:selected").data("ioname")//...
                    if(ioname==undefined||iotitle==undefined)
                    {
                        return;
                    }
                   
                    if(ioname!=undefined&&iotitle!=undefined)
                    {
                        historyAlarmTable = table.render({
                            elem: "#historyalarmtableId",
                            url: "/Scada/ScadaTable/ScadaTableHistoryAlarm?groupid=" + Current.CurrentGroupID + "&serverid=" +Current.CurrentServerID + "&communicateid=" + Current.CurrentCommunicateID + "&deviceid=" + Current.CurrentDeviceID+"&IOTitle="+$("#IOTitle").val(),
                            limit: 1000,
                            limits: [100, 200, 300, 500, 600, 800, 1000, 1500, 2000, 3000],
                            width: document.body.clientWidth - 60,
                            height: 'full-120',
                            page: true,
                            loading: true,
                            id: 'historyalarmtableId',
                  
                            jump: function (obj, first) {
                                if (!first) {
                                    layer.msg('第 ' + obj.curr + ' 页');
                                }
                            },
                            size: "sm",

                            cols: [[
                                 { field: 'zizeng', width: 60, title: '序号', fixed: 'left', templet: '#zizeng' },
                                 { field: "IO_ID", title: "报警ID", width: 140, fixed: 'left' },
                                 { field: "IO_LABEL", title: "名称", width: 100 },
                                 { field: "IO_ALARM_DATE", title: "报警时间", width: 140 },
                                 { field: "IO_ALARM_TYPE", title: "报警类型", width: 100 },
                                 { field: "IO_ALARM_LEVEL", title: "报警级别", width: 100 },
                                 { field: "IO_ALARM_VALUE", title: "报警值", width: 100 },
                                 
                            ]],

                            done: function (res, curr, count) {

                            },

                        });
                    }
                             
                           
                             
                        
                });
                form.on('submit(btHistoryAlarm)', function (data) {
                    historyAlarmTable.reload({
                        where: data.field,
                        page: { curr: 1 } 
               
                    });
                    return false;
                });
               
                ///读取实时数据
                function ReadRealData()
                {
                    ///将用户自定义的iO参数传递到后台
                    $.post("/Scada/ScadaTable/LoadRealTable",{models:ioModels,devices:DeviceModels,CurrentIOID:Current.CurrentIOID,CurrentServerID:Current.CurrentServerID,CurrentCommunicateID:Current.CurrentCommunicateID,CurrentDeviceID:Current.CurrentDeviceID,CurrentGroupID:Current.CurrentGroupID} , function (result) {

                        table.reload('realtableId', {
                            url:'',
                            data:result.data,
                            scroll:getTableScoll($('#realtableId').next('.layui-table-view'))

                        }, 'data');
                        //加载绘图曲线
                        var myChart = echarts.init(document.getElementById('stackrealchart'));
                        var option = myChart.getOption();
                        if (option == undefined) {
                            return;
                        }
                        if( option.xAxis[0].data.length>0)
                        {
                            if(option.xAxis[0].data[ option.xAxis[0].data.length-1]==result.current.Time)
                            {
                                return;
                            }
                        }

                        //增加实时数据
                        option.series[0].data.push(result.current.Value);
                        if (option.series[0].data.length >= 1000) {
                            option.series[0].data.shift();
                        }


                        option.xAxis[0].data.push(result.current.Time);
                        if (option.xAxis[0].data.length >= 1000) {
                            option.xAxis[0].data.shift();
                        }


                        myChart.setOption(option);
                    });

                }
                SCADA.RealDataCustumTimer(ReadRealData,'10');
                let alarmTable = table.render({
                    elem: "#alarmtableId",
                    limit: 2000,
                    limits: [100, 200, 300, 500, 600, 800, 1000, 1500, 2000, 3000],
                    width: document.body.clientWidth - 60,
                    height: 'full-120',
                    page: false,
                    loading: true,
                    id: 'alarmtableId',
                    toolbar: "#realalarmtoolbarTpl",
                    
                    jump: function (obj, first) {
                        if (!first) {
                            layer.msg('第 ' + obj.curr + ' 页');
                        }
                    },
                    size: "sm",

                    cols: [[
                         { field: 'zizeng', width: 60, title: '序号', fixed: 'left', templet: '#zizeng' },
                         { field: "IO_ID", title: "报警ID", width: 140, fixed: 'left' },
                         { field: "IO_LABEL", title: "名称", width: 100 },
                         { field: "IO_ALARM_DATE", title: "报警时间", width: 140 },
                         { field: "IO_ALARM_TYPE", title: "报警类型", width: 100 },
                         { field: "IO_ALARM_LEVEL", title: "报警级别", width: 100 },
                         { field: "IO_ALARM_VALUE", title: "报警值", width: 100 },
                         { field: "IO_ALARM_DISPOSALUSER", title: "处置人", width: 120, edit: 'text', style: 'font-size: 12px;background-color: #ff0000;' },
                         { field: "IO_ALARM_DISPOSALIDEA", title: "处置意见", width: 120, edit: 'text', style: 'font-size: 12px;background-color: #ff0000;' },
                    ]],

                    done: function (res, curr, count) {
                        setTableScoll(this.elem.next('.layui-table-view'), this.scroll);
                    }

                });
                function realAlarmReload() {
                    //执行重载数据
                 
                    $.post("/Scada/ScadaTable/ScadaTableRealAlarm",{models:ioModels,devices:DeviceModels,CurrentIOID:Current.CurrentIOID,CurrentServerID:Current.CurrentServerID,CurrentCommunicateID:Current.CurrentCommunicateID,CurrentDeviceID:Current.CurrentDeviceID,CurrentGroupID:Current.CurrentGroupID} , function (result) {

                        table.reload('alarmtableId', {
                            page: {
                                curr: $(".layui-laypage-em").next().html()
                            },
                            url:'',
                            data:result.data,
                            scroll:getTableScoll($('#alarmtableId').next('.layui-table-view'))

                        }, 'data');
                    });

                };
 
 
                //实时加载当前页包含的参数的报警信息
                SCADA.RealDataCustumTimer(realAlarmReload,20);
    });

             

                // 绘制实时曲线

                function InitChart()
                {
                    if(Current==undefined)
                        return;
                    if(Current.CurrentServerID==null||Current.CurrentServerID=="")
                        return;
                    if(Current.CurrentCommunicateID==null||Current.CurrentCommunicateID=="")
                        return;
                    if(Current.CurrentDeviceID==null||Current.CurrentDeviceID=="")
                        return;
                    if(Current.CurrentIOID==null||Current.CurrentIOID=="")
                        return;
                    if(Current.CurrentGroupID==null||Current.CurrentGroupID=="")
                        return;
                    //加载默认曲线数据
                    $.get("/Scada/ScadaTable/QueryDefaultSeriesData?groupid=" + Current.CurrentGroupID + "&serverid=" +Current.CurrentServerID + "&communicateid=" + Current.CurrentCommunicateID + "&deviceid=" + Current.CurrentDeviceID + "&paraid="+Current.CurrentIOID, function (result) {
                        var res = JSON.parse(JSON.stringify(result).replace("-9999",""));
                        var yAxiss = new Array();
                        var xAxiss = new Array();//分区显示要用,叠加显示不需要此集合
                        var grids = new Array();
                        var gridheight = 95;
                        for (var i = 0; i < res.yAxis.length; i++) {
                            yAxiss.push({
                                type: "value",
                                data: res.yAxis[i].data,
                                name: res.yAxis[i].name,

                                offset: i * 40,
                                minorTick: {
                                    show: true
                                },
                                splitLine: { show: true },
                                minorSplitLine: {
                                    show: true
                                },
                                position: 'left',
                                nameRotate: 90,
                                nameLocation: 'middle',


                            })

                            xAxiss.push({
                                type: "category",
                                data: res.xAxis[0].data,

                                minorTick: {
                                    show: true
                                },

                            })
                            grids.push({

                                top: (4+i*gridheight+2).toString()+'%',
                                bottom: (4 + (i + 1) * gridheight).toString() + '%',
                                height: gridheight.toString()+'%'
                            });
                        }

                        var series = new Array();

                        for (var i = 0; i < res.series.length; i++) {
                            series.push({
                                id: res.series[i].id,
                                type: res.series[i].type,
                                data: res.series[i].data,
                                name: res.series[i].name,
                                yAxisIndex: i,
                                showSymbol: res.series[i].showSymbol,
                                symbol: res.series[i].symbol,
                                symbolSize: res.series[i].symbolSize,

                                lineStyle: {
                                    color: res.series[i].lineStyle.color,
                                    width: res.series[i].lineStyle.width,
                                    type: res.series[i].lineStyle.type,

                                }

                            });


                        }
                        $("#stackrealchart").css('width', $(window).width() - 10);
                        $("#stackrealchart").css('height', 250);
                        var myChart = echarts.init(document.getElementById('stackrealchart'));
                        // 基于准备好的dom，初始化echarts实例
                        var groupname=result.name;
                        // 指定图表的配置项和数据
                        var option = {
                            title: {
                                text: groupname + '实时采集曲线',
                                left:'center',
                                subtext:'数据来源LAZY OS 系统'
                            },
                            tooltip: {
                                trigger: 'none',
                                axisPointer: {
                                    type: 'cross'
                                }
                            },

                            legend: {
                                data: res.legend.data,
                                left: 10,

                                x: 'center',      //可设定图例在左、右、居中
                                y: 'bottom',     //可设定图例在上、下、居中
                            },

                            toolbox: {
                                show: true,
                                feature: {
                                    dataView: {show: true, readOnly: false},
                                    magicType: {show: true, type: ['line', 'bar']},
                                    restore: {show: true},
                                    saveAsImage: {show: true}
                                }
                            },
                            grid: {
                                left: '4%',
                                right: '4%',
                                bottom: '7%',
                                containLabel: true
                            },
                            xAxis: [
                               {
                                   type: "category",
                                   data: res.xAxis[0].data,
                                   minorTick: {
                                       show: true
                                   },
                                   minorSplitLine: {
                                       show: true
                                   },
                                   splitLine: { show: false },
                               }
                            ],
                            series: series,
                            yAxis: yAxiss,

                        };

                        // 使用刚指定的配置项和数据显示图表。
                        myChart.setOption(option, true);
                        myChart.resize();
                    });
                }

              

</script>
<script type="text/html" id="zizeng">
    {{d.LAY_TABLE_INDEX+1}}
</script>
<script type="text/html" id="realalarmtoolbarTpl">
    <label><i class="ok-icon" style="color:red;">&#xe670;</i>注意:请及时排查系统报警信息，并在<span style="color:red;">红色单元格区域</span>填写报警处置原因及报警处置人员姓名。</label>
    <br />
    <label><i class="ok-icon" style="color:red;">&#xe670;</i>注意:漏掉的报警可在历史报警中进行查询并填写处置原因。</label>
</script>

 
 

